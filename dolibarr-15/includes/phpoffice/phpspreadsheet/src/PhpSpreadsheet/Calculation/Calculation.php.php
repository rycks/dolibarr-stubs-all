<?php

namespace PhpOffice\PhpSpreadsheet\Calculation;

class Calculation
{
    /** Constants                */
    /** Regular Expressions        */
    //    Numeric operand
    const CALCULATION_REGEXP_NUMBER = '[-+]?\\d*\\.?\\d+(e[-+]?\\d+)?';
    //    String operand
    const CALCULATION_REGEXP_STRING = '"(?:[^"]|"")*"';
    //    Opening bracket
    const CALCULATION_REGEXP_OPENBRACE = '\\(';
    //    Function (allow for the old @ symbol that could be used to prefix a function, but we'll ignore it)
    const CALCULATION_REGEXP_FUNCTION = '@?(?:_xlfn\\.)?([A-Z][A-Z0-9\\.]*)[\\s]*\\(';
    //    Cell reference (cell or range of cells, with or without a sheet reference)
    const CALCULATION_REGEXP_CELLREF = '((([^\\s,!&%^\\/\\*\\+<>=-]*)|(\'[^\']*\')|(\\"[^\\"]*\\"))!)?\\$?([a-z]{1,3})\\$?(\\d{1,7})';
    //    Named Range of cells
    const CALCULATION_REGEXP_NAMEDRANGE = '((([^\\s,!&%^\\/\\*\\+<>=-]*)|(\'[^\']*\')|(\\"[^\\"]*\\"))!)?([_A-Z][_A-Z0-9\\.]*)';
    //    Error
    const CALCULATION_REGEXP_ERROR = '\\#[A-Z][A-Z0_\\/]*[!\\?]?';
    /** constants */
    const RETURN_ARRAY_AS_ERROR = 'error';
    const RETURN_ARRAY_AS_VALUE = 'value';
    const RETURN_ARRAY_AS_ARRAY = 'array';
    private static $returnArrayAsType = self::RETURN_ARRAY_AS_VALUE;
    /**
     * Instance of this class.
     *
     * @var Calculation
     */
    private static $instance;
    /**
     * Instance of the spreadsheet this Calculation Engine is using.
     *
     * @var Spreadsheet
     */
    private $spreadsheet;
    /**
     * Calculation cache.
     *
     * @var array
     */
    private $calculationCache = [];
    /**
     * Calculation cache enabled.
     *
     * @var bool
     */
    private $calculationCacheEnabled = true;
    /**
     * List of operators that can be used within formulae
     * The true/false value indicates whether it is a binary operator or a unary operator.
     *
     * @var array
     */
    private static $operators = ['+' => true, '-' => true, '*' => true, '/' => true, '^' => true, '&' => true, '%' => false, '~' => false, '>' => true, '<' => true, '=' => true, '>=' => true, '<=' => true, '<>' => true, '|' => true, ':' => true];
    /**
     * List of binary operators (those that expect two operands).
     *
     * @var array
     */
    private static $binaryOperators = ['+' => true, '-' => true, '*' => true, '/' => true, '^' => true, '&' => true, '>' => true, '<' => true, '=' => true, '>=' => true, '<=' => true, '<>' => true, '|' => true, ':' => true];
    /**
     * The debug log generated by the calculation engine.
     *
     * @var Logger
     */
    private $debugLog;
    /**
     * Flag to determine how formula errors should be handled
     *        If true, then a user error will be triggered
     *        If false, then an exception will be thrown.
     *
     * @var bool
     */
    public $suppressFormulaErrors = false;
    /**
     * Error message for any error that was raised/thrown by the calculation engine.
     *
     * @var string
     */
    public $formulaError;
    /**
     * An array of the nested cell references accessed by the calculation engine, used for the debug log.
     *
     * @var CyclicReferenceStack
     */
    private $cyclicReferenceStack;
    private $cellStack = [];
    /**
     * Current iteration counter for cyclic formulae
     * If the value is 0 (or less) then cyclic formulae will throw an exception,
     * otherwise they will iterate to the limit defined here before returning a result.
     *
     * @var int
     */
    private $cyclicFormulaCounter = 1;
    private $cyclicFormulaCell = '';
    /**
     * Number of iterations for cyclic formulae.
     *
     * @var int
     */
    public $cyclicFormulaCount = 1;
    /**
     * Epsilon Precision used for comparisons in calculations.
     *
     * @var float
     */
    private $delta = 1.0E-13;
    /**
     * The current locale setting.
     *
     * @var string
     */
    private static $localeLanguage = 'en_us';
    //    US English    (default locale)
    /**
     * List of available locale settings
     * Note that this is read for the locale subdirectory only when requested.
     *
     * @var string[]
     */
    private static $validLocaleLanguages = ['en'];
    /**
     * Locale-specific argument separator for function arguments.
     *
     * @var string
     */
    private static $localeArgumentSeparator = ',';
    private static $localeFunctions = [];
    /**
     * Locale-specific translations for Excel constants (True, False and Null).
     *
     * @var string[]
     */
    public static $localeBoolean = ['TRUE' => 'TRUE', 'FALSE' => 'FALSE', 'NULL' => 'NULL'];
    /**
     * Excel constant string translations to their PHP equivalents
     * Constant conversion from text name/value to actual (datatyped) value.
     *
     * @var string[]
     */
    private static $excelConstants = ['TRUE' => true, 'FALSE' => false, 'NULL' => null];
    // PhpSpreadsheet functions
    private static $phpSpreadsheetFunctions = ['ABS' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_MATH_AND_TRIG, 'functionCall' => 'abs', 'argumentCount' => '1'], 'ACCRINT' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_FINANCIAL, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Financial::class, 'ACCRINT'], 'argumentCount' => '4-7'], 'ACCRINTM' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_FINANCIAL, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Financial::class, 'ACCRINTM'], 'argumentCount' => '3-5'], 'ACOS' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_MATH_AND_TRIG, 'functionCall' => 'acos', 'argumentCount' => '1'], 'ACOSH' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_MATH_AND_TRIG, 'functionCall' => 'acosh', 'argumentCount' => '1'], 'ACOT' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_MATH_AND_TRIG, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\MathTrig::class, 'ACOT'], 'argumentCount' => '1'], 'ACOTH' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_MATH_AND_TRIG, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\MathTrig::class, 'ACOTH'], 'argumentCount' => '1'], 'ADDRESS' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_LOOKUP_AND_REFERENCE, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\LookupRef::class, 'cellAddress'], 'argumentCount' => '2-5'], 'AMORDEGRC' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_FINANCIAL, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Financial::class, 'AMORDEGRC'], 'argumentCount' => '6,7'], 'AMORLINC' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_FINANCIAL, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Financial::class, 'AMORLINC'], 'argumentCount' => '6,7'], 'AND' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_LOGICAL, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Logical::class, 'logicalAnd'], 'argumentCount' => '1+'], 'AREAS' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_LOOKUP_AND_REFERENCE, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Functions::class, 'DUMMY'], 'argumentCount' => '1'], 'ASC' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_TEXT_AND_DATA, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Functions::class, 'DUMMY'], 'argumentCount' => '1'], 'ASIN' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_MATH_AND_TRIG, 'functionCall' => 'asin', 'argumentCount' => '1'], 'ASINH' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_MATH_AND_TRIG, 'functionCall' => 'asinh', 'argumentCount' => '1'], 'ATAN' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_MATH_AND_TRIG, 'functionCall' => 'atan', 'argumentCount' => '1'], 'ATAN2' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_MATH_AND_TRIG, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\MathTrig::class, 'ATAN2'], 'argumentCount' => '2'], 'ATANH' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_MATH_AND_TRIG, 'functionCall' => 'atanh', 'argumentCount' => '1'], 'AVEDEV' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_STATISTICAL, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Statistical::class, 'AVEDEV'], 'argumentCount' => '1+'], 'AVERAGE' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_STATISTICAL, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Statistical::class, 'AVERAGE'], 'argumentCount' => '1+'], 'AVERAGEA' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_STATISTICAL, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Statistical::class, 'AVERAGEA'], 'argumentCount' => '1+'], 'AVERAGEIF' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_STATISTICAL, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Statistical::class, 'AVERAGEIF'], 'argumentCount' => '2,3'], 'AVERAGEIFS' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_STATISTICAL, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Functions::class, 'DUMMY'], 'argumentCount' => '3+'], 'BAHTTEXT' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_TEXT_AND_DATA, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Functions::class, 'DUMMY'], 'argumentCount' => '1'], 'BESSELI' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_ENGINEERING, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Engineering::class, 'BESSELI'], 'argumentCount' => '2'], 'BESSELJ' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_ENGINEERING, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Engineering::class, 'BESSELJ'], 'argumentCount' => '2'], 'BESSELK' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_ENGINEERING, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Engineering::class, 'BESSELK'], 'argumentCount' => '2'], 'BESSELY' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_ENGINEERING, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Engineering::class, 'BESSELY'], 'argumentCount' => '2'], 'BETADIST' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_STATISTICAL, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Statistical::class, 'BETADIST'], 'argumentCount' => '3-5'], 'BETAINV' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_STATISTICAL, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Statistical::class, 'BETAINV'], 'argumentCount' => '3-5'], 'BIN2DEC' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_ENGINEERING, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Engineering::class, 'BINTODEC'], 'argumentCount' => '1'], 'BIN2HEX' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_ENGINEERING, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Engineering::class, 'BINTOHEX'], 'argumentCount' => '1,2'], 'BIN2OCT' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_ENGINEERING, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Engineering::class, 'BINTOOCT'], 'argumentCount' => '1,2'], 'BINOMDIST' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_STATISTICAL, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Statistical::class, 'BINOMDIST'], 'argumentCount' => '4'], 'BITAND' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_ENGINEERING, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Engineering::class, 'BITAND'], 'argumentCount' => '2'], 'BITOR' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_ENGINEERING, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Engineering::class, 'BITOR'], 'argumentCount' => '2'], 'BITXOR' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_ENGINEERING, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Engineering::class, 'BITOR'], 'argumentCount' => '2'], 'BITLSHIFT' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_ENGINEERING, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Engineering::class, 'BITLSHIFT'], 'argumentCount' => '2'], 'BITRSHIFT' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_ENGINEERING, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Engineering::class, 'BITRSHIFT'], 'argumentCount' => '2'], 'CEILING' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_MATH_AND_TRIG, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\MathTrig::class, 'CEILING'], 'argumentCount' => '2'], 'CELL' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_INFORMATION, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Functions::class, 'DUMMY'], 'argumentCount' => '1,2'], 'CHAR' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_TEXT_AND_DATA, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\TextData::class, 'CHARACTER'], 'argumentCount' => '1'], 'CHIDIST' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_STATISTICAL, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Statistical::class, 'CHIDIST'], 'argumentCount' => '2'], 'CHIINV' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_STATISTICAL, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Statistical::class, 'CHIINV'], 'argumentCount' => '2'], 'CHITEST' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_STATISTICAL, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Functions::class, 'DUMMY'], 'argumentCount' => '2'], 'CHOOSE' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_LOOKUP_AND_REFERENCE, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\LookupRef::class, 'CHOOSE'], 'argumentCount' => '2+'], 'CLEAN' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_TEXT_AND_DATA, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\TextData::class, 'TRIMNONPRINTABLE'], 'argumentCount' => '1'], 'CODE' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_TEXT_AND_DATA, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\TextData::class, 'ASCIICODE'], 'argumentCount' => '1'], 'COLUMN' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_LOOKUP_AND_REFERENCE, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\LookupRef::class, 'COLUMN'], 'argumentCount' => '-1', 'passByReference' => [true]], 'COLUMNS' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_LOOKUP_AND_REFERENCE, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\LookupRef::class, 'COLUMNS'], 'argumentCount' => '1'], 'COMBIN' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_MATH_AND_TRIG, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\MathTrig::class, 'COMBIN'], 'argumentCount' => '2'], 'COMPLEX' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_ENGINEERING, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Engineering::class, 'COMPLEX'], 'argumentCount' => '2,3'], 'CONCAT' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_TEXT_AND_DATA, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\TextData::class, 'CONCATENATE'], 'argumentCount' => '1+'], 'CONCATENATE' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_TEXT_AND_DATA, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\TextData::class, 'CONCATENATE'], 'argumentCount' => '1+'], 'CONFIDENCE' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_STATISTICAL, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Statistical::class, 'CONFIDENCE'], 'argumentCount' => '3'], 'CONVERT' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_ENGINEERING, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Engineering::class, 'CONVERTUOM'], 'argumentCount' => '3'], 'CORREL' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_STATISTICAL, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Statistical::class, 'CORREL'], 'argumentCount' => '2'], 'COS' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_MATH_AND_TRIG, 'functionCall' => 'cos', 'argumentCount' => '1'], 'COSH' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_MATH_AND_TRIG, 'functionCall' => 'cosh', 'argumentCount' => '1'], 'COT' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_MATH_AND_TRIG, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\MathTrig::class, 'COT'], 'argumentCount' => '1'], 'COTH' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_MATH_AND_TRIG, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\MathTrig::class, 'COTH'], 'argumentCount' => '1'], 'COUNT' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_STATISTICAL, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Statistical::class, 'COUNT'], 'argumentCount' => '1+'], 'COUNTA' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_STATISTICAL, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Statistical::class, 'COUNTA'], 'argumentCount' => '1+'], 'COUNTBLANK' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_STATISTICAL, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Statistical::class, 'COUNTBLANK'], 'argumentCount' => '1'], 'COUNTIF' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_STATISTICAL, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Statistical::class, 'COUNTIF'], 'argumentCount' => '2'], 'COUNTIFS' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_STATISTICAL, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Functions::class, 'DUMMY'], 'argumentCount' => '2+'], 'COUPDAYBS' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_FINANCIAL, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Financial::class, 'COUPDAYBS'], 'argumentCount' => '3,4'], 'COUPDAYS' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_FINANCIAL, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Financial::class, 'COUPDAYS'], 'argumentCount' => '3,4'], 'COUPDAYSNC' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_FINANCIAL, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Financial::class, 'COUPDAYSNC'], 'argumentCount' => '3,4'], 'COUPNCD' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_FINANCIAL, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Financial::class, 'COUPNCD'], 'argumentCount' => '3,4'], 'COUPNUM' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_FINANCIAL, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Financial::class, 'COUPNUM'], 'argumentCount' => '3,4'], 'COUPPCD' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_FINANCIAL, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Financial::class, 'COUPPCD'], 'argumentCount' => '3,4'], 'COVAR' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_STATISTICAL, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Statistical::class, 'COVAR'], 'argumentCount' => '2'], 'CRITBINOM' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_STATISTICAL, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Statistical::class, 'CRITBINOM'], 'argumentCount' => '3'], 'CSC' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_MATH_AND_TRIG, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\MathTrig::class, 'CSC'], 'argumentCount' => '1'], 'CSCH' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_MATH_AND_TRIG, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\MathTrig::class, 'CSCH'], 'argumentCount' => '1'], 'CUBEKPIMEMBER' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_CUBE, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Functions::class, 'DUMMY'], 'argumentCount' => '?'], 'CUBEMEMBER' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_CUBE, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Functions::class, 'DUMMY'], 'argumentCount' => '?'], 'CUBEMEMBERPROPERTY' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_CUBE, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Functions::class, 'DUMMY'], 'argumentCount' => '?'], 'CUBERANKEDMEMBER' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_CUBE, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Functions::class, 'DUMMY'], 'argumentCount' => '?'], 'CUBESET' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_CUBE, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Functions::class, 'DUMMY'], 'argumentCount' => '?'], 'CUBESETCOUNT' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_CUBE, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Functions::class, 'DUMMY'], 'argumentCount' => '?'], 'CUBEVALUE' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_CUBE, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Functions::class, 'DUMMY'], 'argumentCount' => '?'], 'CUMIPMT' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_FINANCIAL, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Financial::class, 'CUMIPMT'], 'argumentCount' => '6'], 'CUMPRINC' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_FINANCIAL, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Financial::class, 'CUMPRINC'], 'argumentCount' => '6'], 'DATE' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_DATE_AND_TIME, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\DateTime::class, 'DATE'], 'argumentCount' => '3'], 'DATEDIF' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_DATE_AND_TIME, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\DateTime::class, 'DATEDIF'], 'argumentCount' => '2,3'], 'DATEVALUE' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_DATE_AND_TIME, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\DateTime::class, 'DATEVALUE'], 'argumentCount' => '1'], 'DAVERAGE' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_DATABASE, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Database::class, 'DAVERAGE'], 'argumentCount' => '3'], 'DAY' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_DATE_AND_TIME, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\DateTime::class, 'DAYOFMONTH'], 'argumentCount' => '1'], 'DAYS' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_DATE_AND_TIME, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\DateTime::class, 'DAYS'], 'argumentCount' => '2'], 'DAYS360' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_DATE_AND_TIME, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\DateTime::class, 'DAYS360'], 'argumentCount' => '2,3'], 'DB' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_FINANCIAL, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Financial::class, 'DB'], 'argumentCount' => '4,5'], 'DCOUNT' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_DATABASE, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Database::class, 'DCOUNT'], 'argumentCount' => '3'], 'DCOUNTA' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_DATABASE, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Database::class, 'DCOUNTA'], 'argumentCount' => '3'], 'DDB' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_FINANCIAL, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Financial::class, 'DDB'], 'argumentCount' => '4,5'], 'DEC2BIN' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_ENGINEERING, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Engineering::class, 'DECTOBIN'], 'argumentCount' => '1,2'], 'DEC2HEX' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_ENGINEERING, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Engineering::class, 'DECTOHEX'], 'argumentCount' => '1,2'], 'DEC2OCT' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_ENGINEERING, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Engineering::class, 'DECTOOCT'], 'argumentCount' => '1,2'], 'DEGREES' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_MATH_AND_TRIG, 'functionCall' => 'rad2deg', 'argumentCount' => '1'], 'DELTA' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_ENGINEERING, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Engineering::class, 'DELTA'], 'argumentCount' => '1,2'], 'DEVSQ' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_STATISTICAL, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Statistical::class, 'DEVSQ'], 'argumentCount' => '1+'], 'DGET' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_DATABASE, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Database::class, 'DGET'], 'argumentCount' => '3'], 'DISC' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_FINANCIAL, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Financial::class, 'DISC'], 'argumentCount' => '4,5'], 'DMAX' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_DATABASE, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Database::class, 'DMAX'], 'argumentCount' => '3'], 'DMIN' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_DATABASE, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Database::class, 'DMIN'], 'argumentCount' => '3'], 'DOLLAR' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_TEXT_AND_DATA, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\TextData::class, 'DOLLAR'], 'argumentCount' => '1,2'], 'DOLLARDE' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_FINANCIAL, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Financial::class, 'DOLLARDE'], 'argumentCount' => '2'], 'DOLLARFR' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_FINANCIAL, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Financial::class, 'DOLLARFR'], 'argumentCount' => '2'], 'DPRODUCT' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_DATABASE, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Database::class, 'DPRODUCT'], 'argumentCount' => '3'], 'DSTDEV' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_DATABASE, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Database::class, 'DSTDEV'], 'argumentCount' => '3'], 'DSTDEVP' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_DATABASE, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Database::class, 'DSTDEVP'], 'argumentCount' => '3'], 'DSUM' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_DATABASE, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Database::class, 'DSUM'], 'argumentCount' => '3'], 'DURATION' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_FINANCIAL, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Functions::class, 'DUMMY'], 'argumentCount' => '5,6'], 'DVAR' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_DATABASE, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Database::class, 'DVAR'], 'argumentCount' => '3'], 'DVARP' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_DATABASE, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Database::class, 'DVARP'], 'argumentCount' => '3'], 'EDATE' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_DATE_AND_TIME, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\DateTime::class, 'EDATE'], 'argumentCount' => '2'], 'EFFECT' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_FINANCIAL, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Financial::class, 'EFFECT'], 'argumentCount' => '2'], 'EOMONTH' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_DATE_AND_TIME, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\DateTime::class, 'EOMONTH'], 'argumentCount' => '2'], 'ERF' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_ENGINEERING, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Engineering::class, 'ERF'], 'argumentCount' => '1,2'], 'ERF.PRECISE' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_ENGINEERING, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Engineering::class, 'ERFPRECISE'], 'argumentCount' => '1'], 'ERFC' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_ENGINEERING, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Engineering::class, 'ERFC'], 'argumentCount' => '1'], 'ERFC.PRECISE' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_ENGINEERING, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Engineering::class, 'ERFC'], 'argumentCount' => '1'], 'ERROR.TYPE' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_INFORMATION, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Functions::class, 'errorType'], 'argumentCount' => '1'], 'EVEN' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_MATH_AND_TRIG, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\MathTrig::class, 'EVEN'], 'argumentCount' => '1'], 'EXACT' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_TEXT_AND_DATA, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\TextData::class, 'EXACT'], 'argumentCount' => '2'], 'EXP' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_MATH_AND_TRIG, 'functionCall' => 'exp', 'argumentCount' => '1'], 'EXPONDIST' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_STATISTICAL, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Statistical::class, 'EXPONDIST'], 'argumentCount' => '3'], 'FACT' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_MATH_AND_TRIG, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\MathTrig::class, 'FACT'], 'argumentCount' => '1'], 'FACTDOUBLE' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_MATH_AND_TRIG, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\MathTrig::class, 'FACTDOUBLE'], 'argumentCount' => '1'], 'FALSE' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_LOGICAL, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Logical::class, 'FALSE'], 'argumentCount' => '0'], 'FDIST' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_STATISTICAL, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Functions::class, 'DUMMY'], 'argumentCount' => '3'], 'FIND' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_TEXT_AND_DATA, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\TextData::class, 'SEARCHSENSITIVE'], 'argumentCount' => '2,3'], 'FINDB' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_TEXT_AND_DATA, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\TextData::class, 'SEARCHSENSITIVE'], 'argumentCount' => '2,3'], 'FINV' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_STATISTICAL, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Functions::class, 'DUMMY'], 'argumentCount' => '3'], 'FISHER' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_STATISTICAL, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Statistical::class, 'FISHER'], 'argumentCount' => '1'], 'FISHERINV' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_STATISTICAL, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Statistical::class, 'FISHERINV'], 'argumentCount' => '1'], 'FIXED' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_TEXT_AND_DATA, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\TextData::class, 'FIXEDFORMAT'], 'argumentCount' => '1-3'], 'FLOOR' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_MATH_AND_TRIG, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\MathTrig::class, 'FLOOR'], 'argumentCount' => '2'], 'FORECAST' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_STATISTICAL, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Statistical::class, 'FORECAST'], 'argumentCount' => '3'], 'FORMULATEXT' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_LOOKUP_AND_REFERENCE, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\LookupRef::class, 'FORMULATEXT'], 'argumentCount' => '1', 'passCellReference' => true, 'passByReference' => [true]], 'FREQUENCY' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_STATISTICAL, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Functions::class, 'DUMMY'], 'argumentCount' => '2'], 'FTEST' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_STATISTICAL, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Functions::class, 'DUMMY'], 'argumentCount' => '2'], 'FV' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_FINANCIAL, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Financial::class, 'FV'], 'argumentCount' => '3-5'], 'FVSCHEDULE' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_FINANCIAL, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Financial::class, 'FVSCHEDULE'], 'argumentCount' => '2'], 'GAMMADIST' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_STATISTICAL, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Statistical::class, 'GAMMADIST'], 'argumentCount' => '4'], 'GAMMAINV' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_STATISTICAL, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Statistical::class, 'GAMMAINV'], 'argumentCount' => '3'], 'GAMMALN' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_STATISTICAL, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Statistical::class, 'GAMMALN'], 'argumentCount' => '1'], 'GCD' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_MATH_AND_TRIG, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\MathTrig::class, 'GCD'], 'argumentCount' => '1+'], 'GEOMEAN' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_STATISTICAL, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Statistical::class, 'GEOMEAN'], 'argumentCount' => '1+'], 'GESTEP' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_ENGINEERING, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Engineering::class, 'GESTEP'], 'argumentCount' => '1,2'], 'GETPIVOTDATA' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_LOOKUP_AND_REFERENCE, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Functions::class, 'DUMMY'], 'argumentCount' => '2+'], 'GROWTH' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_STATISTICAL, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Statistical::class, 'GROWTH'], 'argumentCount' => '1-4'], 'HARMEAN' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_STATISTICAL, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Statistical::class, 'HARMEAN'], 'argumentCount' => '1+'], 'HEX2BIN' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_ENGINEERING, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Engineering::class, 'HEXTOBIN'], 'argumentCount' => '1,2'], 'HEX2DEC' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_ENGINEERING, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Engineering::class, 'HEXTODEC'], 'argumentCount' => '1'], 'HEX2OCT' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_ENGINEERING, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Engineering::class, 'HEXTOOCT'], 'argumentCount' => '1,2'], 'HLOOKUP' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_LOOKUP_AND_REFERENCE, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\LookupRef::class, 'HLOOKUP'], 'argumentCount' => '3,4'], 'HOUR' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_DATE_AND_TIME, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\DateTime::class, 'HOUROFDAY'], 'argumentCount' => '1'], 'HYPERLINK' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_LOOKUP_AND_REFERENCE, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\LookupRef::class, 'HYPERLINK'], 'argumentCount' => '1,2', 'passCellReference' => true], 'HYPGEOMDIST' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_STATISTICAL, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Statistical::class, 'HYPGEOMDIST'], 'argumentCount' => '4'], 'IF' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_LOGICAL, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Logical::class, 'statementIf'], 'argumentCount' => '1-3'], 'IFERROR' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_LOGICAL, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Logical::class, 'IFERROR'], 'argumentCount' => '2'], 'IMABS' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_ENGINEERING, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Engineering::class, 'IMABS'], 'argumentCount' => '1'], 'IMAGINARY' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_ENGINEERING, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Engineering::class, 'IMAGINARY'], 'argumentCount' => '1'], 'IMARGUMENT' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_ENGINEERING, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Engineering::class, 'IMARGUMENT'], 'argumentCount' => '1'], 'IMCONJUGATE' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_ENGINEERING, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Engineering::class, 'IMCONJUGATE'], 'argumentCount' => '1'], 'IMCOS' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_ENGINEERING, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Engineering::class, 'IMCOS'], 'argumentCount' => '1'], 'IMCOSH' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_ENGINEERING, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Engineering::class, 'IMCOSH'], 'argumentCount' => '1'], 'IMCOT' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_ENGINEERING, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Engineering::class, 'IMCOT'], 'argumentCount' => '1'], 'IMCSC' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_ENGINEERING, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Engineering::class, 'IMCSC'], 'argumentCount' => '1'], 'IMCSCH' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_ENGINEERING, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Engineering::class, 'IMCSCH'], 'argumentCount' => '1'], 'IMDIV' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_ENGINEERING, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Engineering::class, 'IMDIV'], 'argumentCount' => '2'], 'IMEXP' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_ENGINEERING, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Engineering::class, 'IMEXP'], 'argumentCount' => '1'], 'IMLN' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_ENGINEERING, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Engineering::class, 'IMLN'], 'argumentCount' => '1'], 'IMLOG10' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_ENGINEERING, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Engineering::class, 'IMLOG10'], 'argumentCount' => '1'], 'IMLOG2' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_ENGINEERING, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Engineering::class, 'IMLOG2'], 'argumentCount' => '1'], 'IMPOWER' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_ENGINEERING, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Engineering::class, 'IMPOWER'], 'argumentCount' => '2'], 'IMPRODUCT' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_ENGINEERING, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Engineering::class, 'IMPRODUCT'], 'argumentCount' => '1+'], 'IMREAL' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_ENGINEERING, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Engineering::class, 'IMREAL'], 'argumentCount' => '1'], 'IMSEC' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_ENGINEERING, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Engineering::class, 'IMSEC'], 'argumentCount' => '1'], 'IMSECH' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_ENGINEERING, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Engineering::class, 'IMSECH'], 'argumentCount' => '1'], 'IMSIN' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_ENGINEERING, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Engineering::class, 'IMSIN'], 'argumentCount' => '1'], 'IMSINH' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_ENGINEERING, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Engineering::class, 'IMSINH'], 'argumentCount' => '1'], 'IMSQRT' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_ENGINEERING, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Engineering::class, 'IMSQRT'], 'argumentCount' => '1'], 'IMSUB' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_ENGINEERING, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Engineering::class, 'IMSUB'], 'argumentCount' => '2'], 'IMSUM' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_ENGINEERING, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Engineering::class, 'IMSUM'], 'argumentCount' => '1+'], 'IMTAN' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_ENGINEERING, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Engineering::class, 'IMTAN'], 'argumentCount' => '1'], 'INDEX' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_LOOKUP_AND_REFERENCE, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\LookupRef::class, 'INDEX'], 'argumentCount' => '1-4'], 'INDIRECT' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_LOOKUP_AND_REFERENCE, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\LookupRef::class, 'INDIRECT'], 'argumentCount' => '1,2', 'passCellReference' => true], 'INFO' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_INFORMATION, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Functions::class, 'DUMMY'], 'argumentCount' => '1'], 'INT' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_MATH_AND_TRIG, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\MathTrig::class, 'INT'], 'argumentCount' => '1'], 'INTERCEPT' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_STATISTICAL, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Statistical::class, 'INTERCEPT'], 'argumentCount' => '2'], 'INTRATE' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_FINANCIAL, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Financial::class, 'INTRATE'], 'argumentCount' => '4,5'], 'IPMT' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_FINANCIAL, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Financial::class, 'IPMT'], 'argumentCount' => '4-6'], 'IRR' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_FINANCIAL, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Financial::class, 'IRR'], 'argumentCount' => '1,2'], 'ISBLANK' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_INFORMATION, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Functions::class, 'isBlank'], 'argumentCount' => '1'], 'ISERR' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_INFORMATION, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Functions::class, 'isErr'], 'argumentCount' => '1'], 'ISERROR' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_INFORMATION, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Functions::class, 'isError'], 'argumentCount' => '1'], 'ISEVEN' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_INFORMATION, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Functions::class, 'isEven'], 'argumentCount' => '1'], 'ISFORMULA' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_INFORMATION, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Functions::class, 'isFormula'], 'argumentCount' => '1', 'passCellReference' => true, 'passByReference' => [true]], 'ISLOGICAL' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_INFORMATION, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Functions::class, 'isLogical'], 'argumentCount' => '1'], 'ISNA' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_INFORMATION, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Functions::class, 'isNa'], 'argumentCount' => '1'], 'ISNONTEXT' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_INFORMATION, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Functions::class, 'isNonText'], 'argumentCount' => '1'], 'ISNUMBER' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_INFORMATION, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Functions::class, 'isNumber'], 'argumentCount' => '1'], 'ISODD' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_INFORMATION, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Functions::class, 'isOdd'], 'argumentCount' => '1'], 'ISOWEEKNUM' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_DATE_AND_TIME, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\DateTime::class, 'ISOWEEKNUM'], 'argumentCount' => '1'], 'ISPMT' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_FINANCIAL, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Financial::class, 'ISPMT'], 'argumentCount' => '4'], 'ISREF' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_INFORMATION, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Functions::class, 'DUMMY'], 'argumentCount' => '1'], 'ISTEXT' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_INFORMATION, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Functions::class, 'isText'], 'argumentCount' => '1'], 'JIS' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_TEXT_AND_DATA, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Functions::class, 'DUMMY'], 'argumentCount' => '1'], 'KURT' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_STATISTICAL, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Statistical::class, 'KURT'], 'argumentCount' => '1+'], 'LARGE' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_STATISTICAL, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Statistical::class, 'LARGE'], 'argumentCount' => '2'], 'LCM' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_MATH_AND_TRIG, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\MathTrig::class, 'LCM'], 'argumentCount' => '1+'], 'LEFT' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_TEXT_AND_DATA, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\TextData::class, 'LEFT'], 'argumentCount' => '1,2'], 'LEFTB' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_TEXT_AND_DATA, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\TextData::class, 'LEFT'], 'argumentCount' => '1,2'], 'LEN' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_TEXT_AND_DATA, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\TextData::class, 'STRINGLENGTH'], 'argumentCount' => '1'], 'LENB' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_TEXT_AND_DATA, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\TextData::class, 'STRINGLENGTH'], 'argumentCount' => '1'], 'LINEST' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_STATISTICAL, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Statistical::class, 'LINEST'], 'argumentCount' => '1-4'], 'LN' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_MATH_AND_TRIG, 'functionCall' => 'log', 'argumentCount' => '1'], 'LOG' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_MATH_AND_TRIG, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\MathTrig::class, 'logBase'], 'argumentCount' => '1,2'], 'LOG10' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_MATH_AND_TRIG, 'functionCall' => 'log10', 'argumentCount' => '1'], 'LOGEST' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_STATISTICAL, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Statistical::class, 'LOGEST'], 'argumentCount' => '1-4'], 'LOGINV' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_STATISTICAL, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Statistical::class, 'LOGINV'], 'argumentCount' => '3'], 'LOGNORMDIST' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_STATISTICAL, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Statistical::class, 'LOGNORMDIST'], 'argumentCount' => '3'], 'LOOKUP' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_LOOKUP_AND_REFERENCE, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\LookupRef::class, 'LOOKUP'], 'argumentCount' => '2,3'], 'LOWER' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_TEXT_AND_DATA, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\TextData::class, 'LOWERCASE'], 'argumentCount' => '1'], 'MATCH' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_LOOKUP_AND_REFERENCE, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\LookupRef::class, 'MATCH'], 'argumentCount' => '2,3'], 'MAX' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_STATISTICAL, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Statistical::class, 'MAX'], 'argumentCount' => '1+'], 'MAXA' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_STATISTICAL, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Statistical::class, 'MAXA'], 'argumentCount' => '1+'], 'MAXIF' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_STATISTICAL, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Statistical::class, 'MAXIF'], 'argumentCount' => '2+'], 'MDETERM' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_MATH_AND_TRIG, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\MathTrig::class, 'MDETERM'], 'argumentCount' => '1'], 'MDURATION' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_FINANCIAL, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Functions::class, 'DUMMY'], 'argumentCount' => '5,6'], 'MEDIAN' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_STATISTICAL, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Statistical::class, 'MEDIAN'], 'argumentCount' => '1+'], 'MEDIANIF' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_STATISTICAL, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Functions::class, 'DUMMY'], 'argumentCount' => '2+'], 'MID' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_TEXT_AND_DATA, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\TextData::class, 'MID'], 'argumentCount' => '3'], 'MIDB' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_TEXT_AND_DATA, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\TextData::class, 'MID'], 'argumentCount' => '3'], 'MIN' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_STATISTICAL, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Statistical::class, 'MIN'], 'argumentCount' => '1+'], 'MINA' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_STATISTICAL, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Statistical::class, 'MINA'], 'argumentCount' => '1+'], 'MINIF' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_STATISTICAL, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Statistical::class, 'MINIF'], 'argumentCount' => '2+'], 'MINUTE' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_DATE_AND_TIME, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\DateTime::class, 'MINUTE'], 'argumentCount' => '1'], 'MINVERSE' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_MATH_AND_TRIG, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\MathTrig::class, 'MINVERSE'], 'argumentCount' => '1'], 'MIRR' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_FINANCIAL, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Financial::class, 'MIRR'], 'argumentCount' => '3'], 'MMULT' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_MATH_AND_TRIG, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\MathTrig::class, 'MMULT'], 'argumentCount' => '2'], 'MOD' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_MATH_AND_TRIG, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\MathTrig::class, 'MOD'], 'argumentCount' => '2'], 'MODE' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_STATISTICAL, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Statistical::class, 'MODE'], 'argumentCount' => '1+'], 'MODE.SNGL' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_STATISTICAL, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Statistical::class, 'MODE'], 'argumentCount' => '1+'], 'MONTH' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_DATE_AND_TIME, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\DateTime::class, 'MONTHOFYEAR'], 'argumentCount' => '1'], 'MROUND' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_MATH_AND_TRIG, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\MathTrig::class, 'MROUND'], 'argumentCount' => '2'], 'MULTINOMIAL' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_MATH_AND_TRIG, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\MathTrig::class, 'MULTINOMIAL'], 'argumentCount' => '1+'], 'N' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_INFORMATION, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Functions::class, 'n'], 'argumentCount' => '1'], 'NA' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_INFORMATION, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Functions::class, 'NA'], 'argumentCount' => '0'], 'NEGBINOMDIST' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_STATISTICAL, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Statistical::class, 'NEGBINOMDIST'], 'argumentCount' => '3'], 'NETWORKDAYS' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_DATE_AND_TIME, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\DateTime::class, 'NETWORKDAYS'], 'argumentCount' => '2+'], 'NOMINAL' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_FINANCIAL, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Financial::class, 'NOMINAL'], 'argumentCount' => '2'], 'NORMDIST' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_STATISTICAL, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Statistical::class, 'NORMDIST'], 'argumentCount' => '4'], 'NORMINV' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_STATISTICAL, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Statistical::class, 'NORMINV'], 'argumentCount' => '3'], 'NORMSDIST' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_STATISTICAL, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Statistical::class, 'NORMSDIST'], 'argumentCount' => '1'], 'NORMSINV' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_STATISTICAL, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Statistical::class, 'NORMSINV'], 'argumentCount' => '1'], 'NOT' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_LOGICAL, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Logical::class, 'NOT'], 'argumentCount' => '1'], 'NOW' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_DATE_AND_TIME, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\DateTime::class, 'DATETIMENOW'], 'argumentCount' => '0'], 'NPER' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_FINANCIAL, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Financial::class, 'NPER'], 'argumentCount' => '3-5'], 'NPV' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_FINANCIAL, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Financial::class, 'NPV'], 'argumentCount' => '2+'], 'NUMBERVALUE' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_TEXT_AND_DATA, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\TextData::class, 'NUMBERVALUE'], 'argumentCount' => '1+'], 'OCT2BIN' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_ENGINEERING, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Engineering::class, 'OCTTOBIN'], 'argumentCount' => '1,2'], 'OCT2DEC' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_ENGINEERING, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Engineering::class, 'OCTTODEC'], 'argumentCount' => '1'], 'OCT2HEX' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_ENGINEERING, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Engineering::class, 'OCTTOHEX'], 'argumentCount' => '1,2'], 'ODD' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_MATH_AND_TRIG, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\MathTrig::class, 'ODD'], 'argumentCount' => '1'], 'ODDFPRICE' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_FINANCIAL, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Functions::class, 'DUMMY'], 'argumentCount' => '8,9'], 'ODDFYIELD' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_FINANCIAL, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Functions::class, 'DUMMY'], 'argumentCount' => '8,9'], 'ODDLPRICE' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_FINANCIAL, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Functions::class, 'DUMMY'], 'argumentCount' => '7,8'], 'ODDLYIELD' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_FINANCIAL, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Functions::class, 'DUMMY'], 'argumentCount' => '7,8'], 'OFFSET' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_LOOKUP_AND_REFERENCE, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\LookupRef::class, 'OFFSET'], 'argumentCount' => '3-5', 'passCellReference' => true, 'passByReference' => [true]], 'OR' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_LOGICAL, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Logical::class, 'logicalOr'], 'argumentCount' => '1+'], 'PDURATION' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_FINANCIAL, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Financial::class, 'PDURATION'], 'argumentCount' => '3'], 'PEARSON' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_STATISTICAL, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Statistical::class, 'CORREL'], 'argumentCount' => '2'], 'PERCENTILE' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_STATISTICAL, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Statistical::class, 'PERCENTILE'], 'argumentCount' => '2'], 'PERCENTRANK' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_STATISTICAL, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Statistical::class, 'PERCENTRANK'], 'argumentCount' => '2,3'], 'PERMUT' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_STATISTICAL, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Statistical::class, 'PERMUT'], 'argumentCount' => '2'], 'PHONETIC' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_TEXT_AND_DATA, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Functions::class, 'DUMMY'], 'argumentCount' => '1'], 'PI' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_MATH_AND_TRIG, 'functionCall' => 'pi', 'argumentCount' => '0'], 'PMT' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_FINANCIAL, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Financial::class, 'PMT'], 'argumentCount' => '3-5'], 'POISSON' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_STATISTICAL, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Statistical::class, 'POISSON'], 'argumentCount' => '3'], 'POWER' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_MATH_AND_TRIG, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\MathTrig::class, 'POWER'], 'argumentCount' => '2'], 'PPMT' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_FINANCIAL, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Financial::class, 'PPMT'], 'argumentCount' => '4-6'], 'PRICE' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_FINANCIAL, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Financial::class, 'PRICE'], 'argumentCount' => '6,7'], 'PRICEDISC' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_FINANCIAL, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Financial::class, 'PRICEDISC'], 'argumentCount' => '4,5'], 'PRICEMAT' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_FINANCIAL, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Financial::class, 'PRICEMAT'], 'argumentCount' => '5,6'], 'PROB' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_STATISTICAL, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Functions::class, 'DUMMY'], 'argumentCount' => '3,4'], 'PRODUCT' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_MATH_AND_TRIG, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\MathTrig::class, 'PRODUCT'], 'argumentCount' => '1+'], 'PROPER' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_TEXT_AND_DATA, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\TextData::class, 'PROPERCASE'], 'argumentCount' => '1'], 'PV' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_FINANCIAL, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Financial::class, 'PV'], 'argumentCount' => '3-5'], 'QUARTILE' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_STATISTICAL, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Statistical::class, 'QUARTILE'], 'argumentCount' => '2'], 'QUOTIENT' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_MATH_AND_TRIG, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\MathTrig::class, 'QUOTIENT'], 'argumentCount' => '2'], 'RADIANS' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_MATH_AND_TRIG, 'functionCall' => 'deg2rad', 'argumentCount' => '1'], 'RAND' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_MATH_AND_TRIG, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\MathTrig::class, 'RAND'], 'argumentCount' => '0'], 'RANDBETWEEN' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_MATH_AND_TRIG, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\MathTrig::class, 'RAND'], 'argumentCount' => '2'], 'RANK' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_STATISTICAL, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Statistical::class, 'RANK'], 'argumentCount' => '2,3'], 'RATE' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_FINANCIAL, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Financial::class, 'RATE'], 'argumentCount' => '3-6'], 'RECEIVED' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_FINANCIAL, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Financial::class, 'RECEIVED'], 'argumentCount' => '4-5'], 'REPLACE' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_TEXT_AND_DATA, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\TextData::class, 'REPLACE'], 'argumentCount' => '4'], 'REPLACEB' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_TEXT_AND_DATA, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\TextData::class, 'REPLACE'], 'argumentCount' => '4'], 'REPT' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_TEXT_AND_DATA, 'functionCall' => 'str_repeat', 'argumentCount' => '2'], 'RIGHT' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_TEXT_AND_DATA, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\TextData::class, 'RIGHT'], 'argumentCount' => '1,2'], 'RIGHTB' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_TEXT_AND_DATA, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\TextData::class, 'RIGHT'], 'argumentCount' => '1,2'], 'ROMAN' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_MATH_AND_TRIG, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\MathTrig::class, 'ROMAN'], 'argumentCount' => '1,2'], 'ROUND' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_MATH_AND_TRIG, 'functionCall' => 'round', 'argumentCount' => '2'], 'ROUNDDOWN' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_MATH_AND_TRIG, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\MathTrig::class, 'ROUNDDOWN'], 'argumentCount' => '2'], 'ROUNDUP' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_MATH_AND_TRIG, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\MathTrig::class, 'ROUNDUP'], 'argumentCount' => '2'], 'ROW' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_LOOKUP_AND_REFERENCE, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\LookupRef::class, 'ROW'], 'argumentCount' => '-1', 'passByReference' => [true]], 'ROWS' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_LOOKUP_AND_REFERENCE, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\LookupRef::class, 'ROWS'], 'argumentCount' => '1'], 'RRI' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_FINANCIAL, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Financial::class, 'RRI'], 'argumentCount' => '3'], 'RSQ' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_STATISTICAL, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Statistical::class, 'RSQ'], 'argumentCount' => '2'], 'RTD' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_LOOKUP_AND_REFERENCE, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Functions::class, 'DUMMY'], 'argumentCount' => '1+'], 'SEARCH' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_TEXT_AND_DATA, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\TextData::class, 'SEARCHINSENSITIVE'], 'argumentCount' => '2,3'], 'SEARCHB' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_TEXT_AND_DATA, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\TextData::class, 'SEARCHINSENSITIVE'], 'argumentCount' => '2,3'], 'SEC' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_MATH_AND_TRIG, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\MathTrig::class, 'SEC'], 'argumentCount' => '1'], 'SECH' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_MATH_AND_TRIG, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\MathTrig::class, 'SECH'], 'argumentCount' => '1'], 'SECOND' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_DATE_AND_TIME, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\DateTime::class, 'SECOND'], 'argumentCount' => '1'], 'SERIESSUM' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_MATH_AND_TRIG, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\MathTrig::class, 'SERIESSUM'], 'argumentCount' => '4'], 'SIGN' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_MATH_AND_TRIG, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\MathTrig::class, 'SIGN'], 'argumentCount' => '1'], 'SIN' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_MATH_AND_TRIG, 'functionCall' => 'sin', 'argumentCount' => '1'], 'SINH' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_MATH_AND_TRIG, 'functionCall' => 'sinh', 'argumentCount' => '1'], 'SKEW' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_STATISTICAL, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Statistical::class, 'SKEW'], 'argumentCount' => '1+'], 'SLN' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_FINANCIAL, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Financial::class, 'SLN'], 'argumentCount' => '3'], 'SLOPE' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_STATISTICAL, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Statistical::class, 'SLOPE'], 'argumentCount' => '2'], 'SMALL' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_STATISTICAL, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Statistical::class, 'SMALL'], 'argumentCount' => '2'], 'SQRT' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_MATH_AND_TRIG, 'functionCall' => 'sqrt', 'argumentCount' => '1'], 'SQRTPI' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_MATH_AND_TRIG, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\MathTrig::class, 'SQRTPI'], 'argumentCount' => '1'], 'STANDARDIZE' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_STATISTICAL, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Statistical::class, 'STANDARDIZE'], 'argumentCount' => '3'], 'STDEV' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_STATISTICAL, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Statistical::class, 'STDEV'], 'argumentCount' => '1+'], 'STDEV.S' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_STATISTICAL, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Statistical::class, 'STDEV'], 'argumentCount' => '1+'], 'STDEV.P' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_STATISTICAL, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Statistical::class, 'STDEVP'], 'argumentCount' => '1+'], 'STDEVA' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_STATISTICAL, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Statistical::class, 'STDEVA'], 'argumentCount' => '1+'], 'STDEVP' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_STATISTICAL, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Statistical::class, 'STDEVP'], 'argumentCount' => '1+'], 'STDEVPA' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_STATISTICAL, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Statistical::class, 'STDEVPA'], 'argumentCount' => '1+'], 'STEYX' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_STATISTICAL, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Statistical::class, 'STEYX'], 'argumentCount' => '2'], 'SUBSTITUTE' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_TEXT_AND_DATA, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\TextData::class, 'SUBSTITUTE'], 'argumentCount' => '3,4'], 'SUBTOTAL' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_MATH_AND_TRIG, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\MathTrig::class, 'SUBTOTAL'], 'argumentCount' => '2+', 'passCellReference' => true], 'SUM' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_MATH_AND_TRIG, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\MathTrig::class, 'SUM'], 'argumentCount' => '1+'], 'SUMIF' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_MATH_AND_TRIG, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\MathTrig::class, 'SUMIF'], 'argumentCount' => '2,3'], 'SUMIFS' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_MATH_AND_TRIG, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\MathTrig::class, 'SUMIFS'], 'argumentCount' => '3+'], 'SUMPRODUCT' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_MATH_AND_TRIG, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\MathTrig::class, 'SUMPRODUCT'], 'argumentCount' => '1+'], 'SUMSQ' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_MATH_AND_TRIG, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\MathTrig::class, 'SUMSQ'], 'argumentCount' => '1+'], 'SUMX2MY2' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_MATH_AND_TRIG, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\MathTrig::class, 'SUMX2MY2'], 'argumentCount' => '2'], 'SUMX2PY2' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_MATH_AND_TRIG, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\MathTrig::class, 'SUMX2PY2'], 'argumentCount' => '2'], 'SUMXMY2' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_MATH_AND_TRIG, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\MathTrig::class, 'SUMXMY2'], 'argumentCount' => '2'], 'SWITCH' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_LOGICAL, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Logical::class, 'statementSwitch'], 'argumentCount' => '3+'], 'SYD' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_FINANCIAL, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Financial::class, 'SYD'], 'argumentCount' => '4'], 'T' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_TEXT_AND_DATA, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\TextData::class, 'RETURNSTRING'], 'argumentCount' => '1'], 'TAN' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_MATH_AND_TRIG, 'functionCall' => 'tan', 'argumentCount' => '1'], 'TANH' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_MATH_AND_TRIG, 'functionCall' => 'tanh', 'argumentCount' => '1'], 'TBILLEQ' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_FINANCIAL, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Financial::class, 'TBILLEQ'], 'argumentCount' => '3'], 'TBILLPRICE' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_FINANCIAL, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Financial::class, 'TBILLPRICE'], 'argumentCount' => '3'], 'TBILLYIELD' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_FINANCIAL, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Financial::class, 'TBILLYIELD'], 'argumentCount' => '3'], 'TDIST' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_STATISTICAL, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Statistical::class, 'TDIST'], 'argumentCount' => '3'], 'TEXT' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_TEXT_AND_DATA, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\TextData::class, 'TEXTFORMAT'], 'argumentCount' => '2'], 'TEXTJOIN' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_TEXT_AND_DATA, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\TextData::class, 'TEXTJOIN'], 'argumentCount' => '3+'], 'TIME' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_DATE_AND_TIME, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\DateTime::class, 'TIME'], 'argumentCount' => '3'], 'TIMEVALUE' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_DATE_AND_TIME, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\DateTime::class, 'TIMEVALUE'], 'argumentCount' => '1'], 'TINV' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_STATISTICAL, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Statistical::class, 'TINV'], 'argumentCount' => '2'], 'TODAY' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_DATE_AND_TIME, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\DateTime::class, 'DATENOW'], 'argumentCount' => '0'], 'TRANSPOSE' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_LOOKUP_AND_REFERENCE, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\LookupRef::class, 'TRANSPOSE'], 'argumentCount' => '1'], 'TREND' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_STATISTICAL, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Statistical::class, 'TREND'], 'argumentCount' => '1-4'], 'TRIM' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_TEXT_AND_DATA, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\TextData::class, 'TRIMSPACES'], 'argumentCount' => '1'], 'TRIMMEAN' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_STATISTICAL, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Statistical::class, 'TRIMMEAN'], 'argumentCount' => '2'], 'TRUE' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_LOGICAL, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Logical::class, 'TRUE'], 'argumentCount' => '0'], 'TRUNC' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_MATH_AND_TRIG, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\MathTrig::class, 'TRUNC'], 'argumentCount' => '1,2'], 'TTEST' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_STATISTICAL, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Functions::class, 'DUMMY'], 'argumentCount' => '4'], 'TYPE' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_INFORMATION, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Functions::class, 'TYPE'], 'argumentCount' => '1'], 'UNICHAR' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_TEXT_AND_DATA, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\TextData::class, 'CHARACTER'], 'argumentCount' => '1'], 'UNICODE' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_TEXT_AND_DATA, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\TextData::class, 'ASCIICODE'], 'argumentCount' => '1'], 'UPPER' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_TEXT_AND_DATA, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\TextData::class, 'UPPERCASE'], 'argumentCount' => '1'], 'USDOLLAR' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_FINANCIAL, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Functions::class, 'DUMMY'], 'argumentCount' => '2'], 'VALUE' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_TEXT_AND_DATA, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\TextData::class, 'VALUE'], 'argumentCount' => '1'], 'VAR' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_STATISTICAL, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Statistical::class, 'VARFunc'], 'argumentCount' => '1+'], 'VAR.P' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_STATISTICAL, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Statistical::class, 'VARP'], 'argumentCount' => '1+'], 'VAR.S' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_STATISTICAL, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Statistical::class, 'VARFunc'], 'argumentCount' => '1+'], 'VARA' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_STATISTICAL, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Statistical::class, 'VARA'], 'argumentCount' => '1+'], 'VARP' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_STATISTICAL, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Statistical::class, 'VARP'], 'argumentCount' => '1+'], 'VARPA' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_STATISTICAL, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Statistical::class, 'VARPA'], 'argumentCount' => '1+'], 'VDB' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_FINANCIAL, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Functions::class, 'DUMMY'], 'argumentCount' => '5-7'], 'VLOOKUP' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_LOOKUP_AND_REFERENCE, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\LookupRef::class, 'VLOOKUP'], 'argumentCount' => '3,4'], 'WEEKDAY' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_DATE_AND_TIME, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\DateTime::class, 'WEEKDAY'], 'argumentCount' => '1,2'], 'WEEKNUM' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_DATE_AND_TIME, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\DateTime::class, 'WEEKNUM'], 'argumentCount' => '1,2'], 'WEIBULL' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_STATISTICAL, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Statistical::class, 'WEIBULL'], 'argumentCount' => '4'], 'WORKDAY' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_DATE_AND_TIME, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\DateTime::class, 'WORKDAY'], 'argumentCount' => '2+'], 'XIRR' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_FINANCIAL, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Financial::class, 'XIRR'], 'argumentCount' => '2,3'], 'XNPV' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_FINANCIAL, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Financial::class, 'XNPV'], 'argumentCount' => '3'], 'XOR' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_LOGICAL, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Logical::class, 'logicalXor'], 'argumentCount' => '1+'], 'YEAR' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_DATE_AND_TIME, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\DateTime::class, 'YEAR'], 'argumentCount' => '1'], 'YEARFRAC' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_DATE_AND_TIME, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\DateTime::class, 'YEARFRAC'], 'argumentCount' => '2,3'], 'YIELD' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_FINANCIAL, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Functions::class, 'DUMMY'], 'argumentCount' => '6,7'], 'YIELDDISC' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_FINANCIAL, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Financial::class, 'YIELDDISC'], 'argumentCount' => '4,5'], 'YIELDMAT' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_FINANCIAL, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Financial::class, 'YIELDMAT'], 'argumentCount' => '5,6'], 'ZTEST' => ['category' => \PhpOffice\PhpSpreadsheet\Calculation\Category::CATEGORY_STATISTICAL, 'functionCall' => [\PhpOffice\PhpSpreadsheet\Calculation\Statistical::class, 'ZTEST'], 'argumentCount' => '2-3']];
    //    Internal functions used for special control purposes
    private static $controlFunctions = ['MKMATRIX' => ['argumentCount' => '*', 'functionCall' => 'self::mkMatrix']];
    public function __construct(\PhpOffice\PhpSpreadsheet\Spreadsheet $spreadsheet = null)
    {
    }
    private static function loadLocales()
    {
    }
    /**
     * Get an instance of this class.
     *
     * @param Spreadsheet $spreadsheet Injected spreadsheet for working with a PhpSpreadsheet Spreadsheet object,
     *                                    or NULL to create a standalone claculation engine
     *
     * @return Calculation
     */
    public static function getInstance(\PhpOffice\PhpSpreadsheet\Spreadsheet $spreadsheet = null)
    {
    }
    /**
     * Flush the calculation cache for any existing instance of this class
     *        but only if a Calculation instance exists.
     */
    public function flushInstance()
    {
    }
    /**
     * Get the Logger for this calculation engine instance.
     *
     * @return Logger
     */
    public function getDebugLog()
    {
    }
    /**
     * __clone implementation. Cloning should not be allowed in a Singleton!
     *
     * @throws Exception
     */
    public final function __clone()
    {
    }
    /**
     * Return the locale-specific translation of TRUE.
     *
     * @return string locale-specific translation of TRUE
     */
    public static function getTRUE()
    {
    }
    /**
     * Return the locale-specific translation of FALSE.
     *
     * @return string locale-specific translation of FALSE
     */
    public static function getFALSE()
    {
    }
    /**
     * Set the Array Return Type (Array or Value of first element in the array).
     *
     * @param string $returnType Array return type
     *
     * @return bool Success or failure
     */
    public static function setArrayReturnType($returnType)
    {
    }
    /**
     * Return the Array Return Type (Array or Value of first element in the array).
     *
     * @return string $returnType Array return type
     */
    public static function getArrayReturnType()
    {
    }
    /**
     * Is calculation caching enabled?
     *
     * @return bool
     */
    public function getCalculationCacheEnabled()
    {
    }
    /**
     * Enable/disable calculation cache.
     *
     * @param bool $pValue
     */
    public function setCalculationCacheEnabled($pValue)
    {
    }
    /**
     * Enable calculation cache.
     */
    public function enableCalculationCache()
    {
    }
    /**
     * Disable calculation cache.
     */
    public function disableCalculationCache()
    {
    }
    /**
     * Clear calculation cache.
     */
    public function clearCalculationCache()
    {
    }
    /**
     * Clear calculation cache for a specified worksheet.
     *
     * @param string $worksheetName
     */
    public function clearCalculationCacheForWorksheet($worksheetName)
    {
    }
    /**
     * Rename calculation cache for a specified worksheet.
     *
     * @param string $fromWorksheetName
     * @param string $toWorksheetName
     */
    public function renameCalculationCacheForWorksheet($fromWorksheetName, $toWorksheetName)
    {
    }
    /**
     * Get the currently defined locale code.
     *
     * @return string
     */
    public function getLocale()
    {
    }
    /**
     * Set the locale code.
     *
     * @param string $locale The locale to use for formula translation, eg: 'en_us'
     *
     * @return bool
     */
    public function setLocale($locale)
    {
    }
    /**
     * @param string $fromSeparator
     * @param string $toSeparator
     * @param string $formula
     * @param bool $inBraces
     *
     * @return string
     */
    public static function translateSeparator($fromSeparator, $toSeparator, $formula, &$inBraces)
    {
    }
    /**
     * @param string[] $from
     * @param string[] $to
     * @param string $formula
     * @param string $fromSeparator
     * @param string $toSeparator
     *
     * @return string
     */
    private static function translateFormula(array $from, array $to, $formula, $fromSeparator, $toSeparator)
    {
    }
    private static $functionReplaceFromExcel = null;
    private static $functionReplaceToLocale = null;
    public function _translateFormulaToLocale($formula)
    {
    }
    private static $functionReplaceFromLocale = null;
    private static $functionReplaceToExcel = null;
    public function _translateFormulaToEnglish($formula)
    {
    }
    public static function localeFunc($function)
    {
    }
    /**
     * Wrap string values in quotes.
     *
     * @param mixed $value
     *
     * @return mixed
     */
    public static function wrapResult($value)
    {
    }
    /**
     * Remove quotes used as a wrapper to identify string values.
     *
     * @param mixed $value
     *
     * @return mixed
     */
    public static function unwrapResult($value)
    {
    }
    /**
     * Calculate cell value (using formula from a cell ID)
     * Retained for backward compatibility.
     *
     * @param Cell $pCell Cell to calculate
     *
     * @throws Exception
     *
     * @return mixed
     */
    public function calculate(\PhpOffice\PhpSpreadsheet\Cell\Cell $pCell = null)
    {
    }
    /**
     * Calculate the value of a cell formula.
     *
     * @param Cell $pCell Cell to calculate
     * @param bool $resetLog Flag indicating whether the debug log should be reset or not
     *
     * @throws \PhpOffice\PhpSpreadsheet\Exception
     *
     * @return mixed
     */
    public function calculateCellValue(\PhpOffice\PhpSpreadsheet\Cell\Cell $pCell = null, $resetLog = true)
    {
    }
    /**
     * Validate and parse a formula string.
     *
     * @param string $formula Formula to parse
     *
     * @return array|bool
     */
    public function parseFormula($formula)
    {
    }
    /**
     * Calculate the value of a formula.
     *
     * @param string $formula Formula to parse
     * @param string $cellID Address of the cell to calculate
     * @param Cell $pCell Cell to calculate
     *
     * @throws \PhpOffice\PhpSpreadsheet\Exception
     *
     * @return mixed
     */
    public function calculateFormula($formula, $cellID = null, \PhpOffice\PhpSpreadsheet\Cell\Cell $pCell = null)
    {
    }
    /**
     * @param string $cellReference
     * @param mixed $cellValue
     *
     * @return bool
     */
    public function getValueFromCache($cellReference, &$cellValue)
    {
    }
    /**
     * @param string $cellReference
     * @param mixed $cellValue
     */
    public function saveValueToCache($cellReference, $cellValue)
    {
    }
    /**
     * Parse a cell formula and calculate its value.
     *
     * @param string $formula The formula to parse and calculate
     * @param string $cellID The ID (e.g. A3) of the cell that we are calculating
     * @param Cell $pCell Cell to calculate
     *
     * @throws Exception
     *
     * @return mixed
     */
    public function _calculateFormulaValue($formula, $cellID = null, \PhpOffice\PhpSpreadsheet\Cell\Cell $pCell = null)
    {
    }
    /**
     * Ensure that paired matrix operands are both matrices and of the same size.
     *
     * @param mixed &$operand1 First matrix operand
     * @param mixed &$operand2 Second matrix operand
     * @param int $resize Flag indicating whether the matrices should be resized to match
     *                                        and (if so), whether the smaller dimension should grow or the
     *                                        larger should shrink.
     *                                            0 = no resize
     *                                            1 = shrink to fit
     *                                            2 = extend to fit
     *
     * @return array
     */
    private static function checkMatrixOperands(&$operand1, &$operand2, $resize = 1)
    {
    }
    /**
     * Read the dimensions of a matrix, and re-index it with straight numeric keys starting from row 0, column 0.
     *
     * @param array &$matrix matrix operand
     *
     * @return int[] An array comprising the number of rows, and number of columns
     */
    public static function getMatrixDimensions(array &$matrix)
    {
    }
    /**
     * Ensure that paired matrix operands are both matrices of the same size.
     *
     * @param mixed &$matrix1 First matrix operand
     * @param mixed &$matrix2 Second matrix operand
     * @param int $matrix1Rows Row size of first matrix operand
     * @param int $matrix1Columns Column size of first matrix operand
     * @param int $matrix2Rows Row size of second matrix operand
     * @param int $matrix2Columns Column size of second matrix operand
     */
    private static function resizeMatricesShrink(&$matrix1, &$matrix2, $matrix1Rows, $matrix1Columns, $matrix2Rows, $matrix2Columns)
    {
    }
    /**
     * Ensure that paired matrix operands are both matrices of the same size.
     *
     * @param mixed &$matrix1 First matrix operand
     * @param mixed &$matrix2 Second matrix operand
     * @param int $matrix1Rows Row size of first matrix operand
     * @param int $matrix1Columns Column size of first matrix operand
     * @param int $matrix2Rows Row size of second matrix operand
     * @param int $matrix2Columns Column size of second matrix operand
     */
    private static function resizeMatricesExtend(&$matrix1, &$matrix2, $matrix1Rows, $matrix1Columns, $matrix2Rows, $matrix2Columns)
    {
    }
    /**
     * Format details of an operand for display in the log (based on operand type).
     *
     * @param mixed $value First matrix operand
     *
     * @return mixed
     */
    private function showValue($value)
    {
    }
    /**
     * Format type and details of an operand for display in the log (based on operand type).
     *
     * @param mixed $value First matrix operand
     *
     * @return null|string
     */
    private function showTypeDetails($value)
    {
    }
    /**
     * @param string $formula
     *
     * @return string
     */
    private function convertMatrixReferences($formula)
    {
    }
    private static function mkMatrix(...$args)
    {
    }
    //    Binary Operators
    //    These operators always work on two values
    //    Array key is the operator, the value indicates whether this is a left or right associative operator
    private static $operatorAssociativity = [
        '^' => 0,
        //    Exponentiation
        '*' => 0,
        '/' => 0,
        //    Multiplication and Division
        '+' => 0,
        '-' => 0,
        //    Addition and Subtraction
        '&' => 0,
        //    Concatenation
        '|' => 0,
        ':' => 0,
        //    Intersect and Range
        '>' => 0,
        '<' => 0,
        '=' => 0,
        '>=' => 0,
        '<=' => 0,
        '<>' => 0,
    ];
    //    Comparison (Boolean) Operators
    //    These operators work on two values, but always return a boolean result
    private static $comparisonOperators = ['>' => true, '<' => true, '=' => true, '>=' => true, '<=' => true, '<>' => true];
    //    Operator Precedence
    //    This list includes all valid operators, whether binary (including boolean) or unary (such as %)
    //    Array key is the operator, the value is its precedence
    private static $operatorPrecedence = [
        ':' => 8,
        //    Range
        '|' => 7,
        //    Intersect
        '~' => 6,
        //    Negation
        '%' => 5,
        //    Percentage
        '^' => 4,
        //    Exponentiation
        '*' => 3,
        '/' => 3,
        //    Multiplication and Division
        '+' => 2,
        '-' => 2,
        //    Addition and Subtraction
        '&' => 1,
        //    Concatenation
        '>' => 0,
        '<' => 0,
        '=' => 0,
        '>=' => 0,
        '<=' => 0,
        '<>' => 0,
    ];
    // Convert infix to postfix notation
    /**
     * @param string $formula
     * @param null|\PhpOffice\PhpSpreadsheet\Cell\Cell $pCell
     *
     * @return bool
     */
    private function _parseFormula($formula, \PhpOffice\PhpSpreadsheet\Cell\Cell $pCell = null)
    {
    }
    private static function dataTestReference(&$operandData)
    {
    }
    // evaluate postfix notation
    /**
     * @param mixed $tokens
     * @param null|string $cellID
     * @param null|Cell $pCell
     *
     * @return bool
     */
    private function processTokenStack($tokens, $cellID = null, \PhpOffice\PhpSpreadsheet\Cell\Cell $pCell = null)
    {
    }
    private function validateBinaryOperand(&$operand, &$stack)
    {
    }
    /**
     * @param null|string $cellID
     * @param mixed $operand1
     * @param mixed $operand2
     * @param string $operation
     * @param Stack $stack
     * @param bool $recursingArrays
     *
     * @return bool
     */
    private function executeBinaryComparisonOperation($cellID, $operand1, $operand2, $operation, \PhpOffice\PhpSpreadsheet\Calculation\Token\Stack &$stack, $recursingArrays = false)
    {
    }
    /**
     * Compare two strings in the same way as strcmp() except that lowercase come before uppercase letters.
     *
     * @param string $str1 First string value for the comparison
     * @param string $str2 Second string value for the comparison
     *
     * @return int
     */
    private function strcmpLowercaseFirst($str1, $str2)
    {
    }
    /**
     * @param mixed $operand1
     * @param mixed $operand2
     * @param mixed $operation
     * @param string $matrixFunction
     * @param mixed $stack
     *
     * @return bool
     */
    private function executeNumericBinaryOperation($operand1, $operand2, $operation, $matrixFunction, &$stack)
    {
    }
    // trigger an error, but nicely, if need be
    protected function raiseFormulaError($errorMessage)
    {
    }
    /**
     * Extract range values.
     *
     * @param string &$pRange String based range representation
     * @param Worksheet $pSheet Worksheet
     * @param bool $resetLog Flag indicating whether calculation log should be reset or not
     *
     * @return mixed Array of values in range if range contains more than one element. Otherwise, a single value is returned.
     */
    public function extractCellRange(&$pRange = 'A1', \PhpOffice\PhpSpreadsheet\Worksheet\Worksheet $pSheet = null, $resetLog = true)
    {
    }
    /**
     * Extract range values.
     *
     * @param string &$pRange String based range representation
     * @param Worksheet $pSheet Worksheet
     * @param bool $resetLog Flag indicating whether calculation log should be reset or not
     *
     * @return mixed Array of values in range if range contains more than one element. Otherwise, a single value is returned.
     */
    public function extractNamedRange(&$pRange = 'A1', \PhpOffice\PhpSpreadsheet\Worksheet\Worksheet $pSheet = null, $resetLog = true)
    {
    }
    /**
     * Is a specific function implemented?
     *
     * @param string $pFunction Function Name
     *
     * @return bool
     */
    public function isImplemented($pFunction)
    {
    }
    /**
     * Get a list of all implemented functions as an array of function objects.
     *
     * @return array of Category
     */
    public function getFunctions()
    {
    }
    /**
     * Get a list of implemented Excel function names.
     *
     * @return array
     */
    public function getImplementedFunctionNames()
    {
    }
    /**
     * Add cell reference if needed while making sure that it is the last argument.
     *
     * @param array $args
     * @param bool $passCellReference
     * @param array|string $functionCall
     * @param null|Cell $pCell
     *
     * @return array
     */
    private function addCellReference(array $args, $passCellReference, $functionCall, \PhpOffice\PhpSpreadsheet\Cell\Cell $pCell = null)
    {
    }
}