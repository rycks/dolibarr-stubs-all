<?php

/**
 * PHPExcel_Calculation (Multiton)
 *
 * @category	PHPExcel
 * @package		PHPExcel_Calculation
 * @copyright	Copyright (c) 2006 - 2014 PHPExcel (http://www.codeplex.com/PHPExcel)
 */
class PHPExcel_Calculation
{
    /** Constants				*/
    /** Regular Expressions		*/
    //	Numeric operand
    const CALCULATION_REGEXP_NUMBER = '[-+]?\\d*\\.?\\d+(e[-+]?\\d+)?';
    //	String operand
    const CALCULATION_REGEXP_STRING = '"(?:[^"]|"")*"';
    //	Opening bracket
    const CALCULATION_REGEXP_OPENBRACE = '\\(';
    //	Function (allow for the old @ symbol that could be used to prefix a function, but we'll ignore it)
    const CALCULATION_REGEXP_FUNCTION = '@?([A-Z][A-Z0-9\\.]*)[\\s]*\\(';
    //	Cell reference (cell or range of cells, with or without a sheet reference)
    const CALCULATION_REGEXP_CELLREF = \CALCULATION_REGEXP_CELLREF;
    //	Named Range of cells
    const CALCULATION_REGEXP_NAMEDRANGE = \CALCULATION_REGEXP_NAMEDRANGE;
    //	Error
    const CALCULATION_REGEXP_ERROR = '\\#[A-Z][A-Z0_\\/]*[!\\?]?';
    /** constants */
    const RETURN_ARRAY_AS_ERROR = 'error';
    const RETURN_ARRAY_AS_VALUE = 'value';
    const RETURN_ARRAY_AS_ARRAY = 'array';
    private static $returnArrayAsType = self::RETURN_ARRAY_AS_VALUE;
    /**
     * Instance of this class
     *
     * @access	private
     * @var PHPExcel_Calculation
     */
    private static $_instance;
    /**
     * Instance of the workbook this Calculation Engine is using
     *
     * @access	private
     * @var PHPExcel
     */
    private $_workbook;
    /**
     * List of instances of the calculation engine that we've instantiated for individual workbooks
     *
     * @access	private
     * @var PHPExcel_Calculation[]
     */
    private static $_workbookSets;
    /**
     * Calculation cache
     *
     * @access	private
     * @var array
     */
    private $_calculationCache = array();
    /**
     * Calculation cache enabled
     *
     * @access	private
     * @var boolean
     */
    private $_calculationCacheEnabled = \TRUE;
    /**
     * List of operators that can be used within formulae
     * The true/false value indicates whether it is a binary operator or a unary operator
     *
     * @access	private
     * @var array
     */
    private static $_operators = array('+' => \TRUE, '-' => \TRUE, '*' => \TRUE, '/' => \TRUE, '^' => \TRUE, '&' => \TRUE, '%' => \FALSE, '~' => \FALSE, '>' => \TRUE, '<' => \TRUE, '=' => \TRUE, '>=' => \TRUE, '<=' => \TRUE, '<>' => \TRUE, '|' => \TRUE, ':' => \TRUE);
    /**
     * List of binary operators (those that expect two operands)
     *
     * @access	private
     * @var array
     */
    private static $_binaryOperators = array('+' => \TRUE, '-' => \TRUE, '*' => \TRUE, '/' => \TRUE, '^' => \TRUE, '&' => \TRUE, '>' => \TRUE, '<' => \TRUE, '=' => \TRUE, '>=' => \TRUE, '<=' => \TRUE, '<>' => \TRUE, '|' => \TRUE, ':' => \TRUE);
    /**
     * The debug log generated by the calculation engine
     *
     * @access	private
     * @var PHPExcel_CalcEngine_Logger
     *
     */
    private $debugLog;
    /**
     * Flag to determine how formula errors should be handled
     *		If true, then a user error will be triggered
     *		If false, then an exception will be thrown
     *
     * @access	public
     * @var boolean
     *
     */
    public $suppressFormulaErrors = \FALSE;
    /**
     * Error message for any error that was raised/thrown by the calculation engine
     *
     * @access	public
     * @var string
     *
     */
    public $formulaError = \NULL;
    /**
     * An array of the nested cell references accessed by the calculation engine, used for the debug log
     *
     * @access	private
     * @var array of string
     *
     */
    private $_cyclicReferenceStack;
    private $_cellStack = array();
    /**
     * Current iteration counter for cyclic formulae
     * If the value is 0 (or less) then cyclic formulae will throw an exception,
     *    otherwise they will iterate to the limit defined here before returning a result
     *
     * @var integer
     *
     */
    private $_cyclicFormulaCount = 1;
    private $_cyclicFormulaCell = '';
    /**
     * Number of iterations for cyclic formulae
     *
     * @var integer
     *
     */
    public $cyclicFormulaCount = 1;
    /**
     * Precision used for calculations
     *
     * @var integer
     *
     */
    private $_savedPrecision = 14;
    /**
     * The current locale setting
     *
     * @var string
     *
     */
    private static $_localeLanguage = 'en_us';
    //	US English	(default locale)
    /**
     * List of available locale settings
     * Note that this is read for the locale subdirectory only when requested
     *
     * @var string[]
     *
     */
    private static $_validLocaleLanguages = array('en');
    /**
     * Locale-specific argument separator for function arguments
     *
     * @var string
     *
     */
    private static $_localeArgumentSeparator = ',';
    private static $_localeFunctions = array();
    /**
     * Locale-specific translations for Excel constants (True, False and Null)
     *
     * @var string[]
     *
     */
    public static $_localeBoolean = array('TRUE' => 'TRUE', 'FALSE' => 'FALSE', 'NULL' => 'NULL');
    /**
     * Excel constant string translations to their PHP equivalents
     * Constant conversion from text name/value to actual (datatyped) value
     *
     * @var string[]
     *
     */
    private static $_ExcelConstants = array('TRUE' => \TRUE, 'FALSE' => \FALSE, 'NULL' => \NULL);
    //	PHPExcel functions
    private static $_PHPExcelFunctions = array(
        // PHPExcel functions
        'ABS' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_MATH_AND_TRIG, 'functionCall' => 'abs', 'argumentCount' => '1'),
        'ACCRINT' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_FINANCIAL, 'functionCall' => 'PHPExcel_Calculation_Financial::ACCRINT', 'argumentCount' => '4-7'),
        'ACCRINTM' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_FINANCIAL, 'functionCall' => 'PHPExcel_Calculation_Financial::ACCRINTM', 'argumentCount' => '3-5'),
        'ACOS' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_MATH_AND_TRIG, 'functionCall' => 'acos', 'argumentCount' => '1'),
        'ACOSH' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_MATH_AND_TRIG, 'functionCall' => 'acosh', 'argumentCount' => '1'),
        'ADDRESS' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_LOOKUP_AND_REFERENCE, 'functionCall' => 'PHPExcel_Calculation_LookupRef::CELL_ADDRESS', 'argumentCount' => '2-5'),
        'AMORDEGRC' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_FINANCIAL, 'functionCall' => 'PHPExcel_Calculation_Financial::AMORDEGRC', 'argumentCount' => '6,7'),
        'AMORLINC' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_FINANCIAL, 'functionCall' => 'PHPExcel_Calculation_Financial::AMORLINC', 'argumentCount' => '6,7'),
        'AND' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_LOGICAL, 'functionCall' => 'PHPExcel_Calculation_Logical::LOGICAL_AND', 'argumentCount' => '1+'),
        'AREAS' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_LOOKUP_AND_REFERENCE, 'functionCall' => 'PHPExcel_Calculation_Functions::DUMMY', 'argumentCount' => '1'),
        'ASC' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_TEXT_AND_DATA, 'functionCall' => 'PHPExcel_Calculation_Functions::DUMMY', 'argumentCount' => '1'),
        'ASIN' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_MATH_AND_TRIG, 'functionCall' => 'asin', 'argumentCount' => '1'),
        'ASINH' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_MATH_AND_TRIG, 'functionCall' => 'asinh', 'argumentCount' => '1'),
        'ATAN' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_MATH_AND_TRIG, 'functionCall' => 'atan', 'argumentCount' => '1'),
        'ATAN2' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_MATH_AND_TRIG, 'functionCall' => 'PHPExcel_Calculation_MathTrig::ATAN2', 'argumentCount' => '2'),
        'ATANH' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_MATH_AND_TRIG, 'functionCall' => 'atanh', 'argumentCount' => '1'),
        'AVEDEV' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_STATISTICAL, 'functionCall' => 'PHPExcel_Calculation_Statistical::AVEDEV', 'argumentCount' => '1+'),
        'AVERAGE' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_STATISTICAL, 'functionCall' => 'PHPExcel_Calculation_Statistical::AVERAGE', 'argumentCount' => '1+'),
        'AVERAGEA' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_STATISTICAL, 'functionCall' => 'PHPExcel_Calculation_Statistical::AVERAGEA', 'argumentCount' => '1+'),
        'AVERAGEIF' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_STATISTICAL, 'functionCall' => 'PHPExcel_Calculation_Statistical::AVERAGEIF', 'argumentCount' => '2,3'),
        'AVERAGEIFS' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_STATISTICAL, 'functionCall' => 'PHPExcel_Calculation_Functions::DUMMY', 'argumentCount' => '3+'),
        'BAHTTEXT' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_TEXT_AND_DATA, 'functionCall' => 'PHPExcel_Calculation_Functions::DUMMY', 'argumentCount' => '1'),
        'BESSELI' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_ENGINEERING, 'functionCall' => 'PHPExcel_Calculation_Engineering::BESSELI', 'argumentCount' => '2'),
        'BESSELJ' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_ENGINEERING, 'functionCall' => 'PHPExcel_Calculation_Engineering::BESSELJ', 'argumentCount' => '2'),
        'BESSELK' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_ENGINEERING, 'functionCall' => 'PHPExcel_Calculation_Engineering::BESSELK', 'argumentCount' => '2'),
        'BESSELY' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_ENGINEERING, 'functionCall' => 'PHPExcel_Calculation_Engineering::BESSELY', 'argumentCount' => '2'),
        'BETADIST' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_STATISTICAL, 'functionCall' => 'PHPExcel_Calculation_Statistical::BETADIST', 'argumentCount' => '3-5'),
        'BETAINV' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_STATISTICAL, 'functionCall' => 'PHPExcel_Calculation_Statistical::BETAINV', 'argumentCount' => '3-5'),
        'BIN2DEC' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_ENGINEERING, 'functionCall' => 'PHPExcel_Calculation_Engineering::BINTODEC', 'argumentCount' => '1'),
        'BIN2HEX' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_ENGINEERING, 'functionCall' => 'PHPExcel_Calculation_Engineering::BINTOHEX', 'argumentCount' => '1,2'),
        'BIN2OCT' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_ENGINEERING, 'functionCall' => 'PHPExcel_Calculation_Engineering::BINTOOCT', 'argumentCount' => '1,2'),
        'BINOMDIST' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_STATISTICAL, 'functionCall' => 'PHPExcel_Calculation_Statistical::BINOMDIST', 'argumentCount' => '4'),
        'CEILING' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_MATH_AND_TRIG, 'functionCall' => 'PHPExcel_Calculation_MathTrig::CEILING', 'argumentCount' => '2'),
        'CELL' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_INFORMATION, 'functionCall' => 'PHPExcel_Calculation_Functions::DUMMY', 'argumentCount' => '1,2'),
        'CHAR' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_TEXT_AND_DATA, 'functionCall' => 'PHPExcel_Calculation_TextData::CHARACTER', 'argumentCount' => '1'),
        'CHIDIST' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_STATISTICAL, 'functionCall' => 'PHPExcel_Calculation_Statistical::CHIDIST', 'argumentCount' => '2'),
        'CHIINV' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_STATISTICAL, 'functionCall' => 'PHPExcel_Calculation_Statistical::CHIINV', 'argumentCount' => '2'),
        'CHITEST' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_STATISTICAL, 'functionCall' => 'PHPExcel_Calculation_Functions::DUMMY', 'argumentCount' => '2'),
        'CHOOSE' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_LOOKUP_AND_REFERENCE, 'functionCall' => 'PHPExcel_Calculation_LookupRef::CHOOSE', 'argumentCount' => '2+'),
        'CLEAN' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_TEXT_AND_DATA, 'functionCall' => 'PHPExcel_Calculation_TextData::TRIMNONPRINTABLE', 'argumentCount' => '1'),
        'CODE' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_TEXT_AND_DATA, 'functionCall' => 'PHPExcel_Calculation_TextData::ASCIICODE', 'argumentCount' => '1'),
        'COLUMN' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_LOOKUP_AND_REFERENCE, 'functionCall' => 'PHPExcel_Calculation_LookupRef::COLUMN', 'argumentCount' => '-1', 'passByReference' => array(\TRUE)),
        'COLUMNS' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_LOOKUP_AND_REFERENCE, 'functionCall' => 'PHPExcel_Calculation_LookupRef::COLUMNS', 'argumentCount' => '1'),
        'COMBIN' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_MATH_AND_TRIG, 'functionCall' => 'PHPExcel_Calculation_MathTrig::COMBIN', 'argumentCount' => '2'),
        'COMPLEX' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_ENGINEERING, 'functionCall' => 'PHPExcel_Calculation_Engineering::COMPLEX', 'argumentCount' => '2,3'),
        'CONCATENATE' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_TEXT_AND_DATA, 'functionCall' => 'PHPExcel_Calculation_TextData::CONCATENATE', 'argumentCount' => '1+'),
        'CONFIDENCE' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_STATISTICAL, 'functionCall' => 'PHPExcel_Calculation_Statistical::CONFIDENCE', 'argumentCount' => '3'),
        'CONVERT' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_ENGINEERING, 'functionCall' => 'PHPExcel_Calculation_Engineering::CONVERTUOM', 'argumentCount' => '3'),
        'CORREL' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_STATISTICAL, 'functionCall' => 'PHPExcel_Calculation_Statistical::CORREL', 'argumentCount' => '2'),
        'COS' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_MATH_AND_TRIG, 'functionCall' => 'cos', 'argumentCount' => '1'),
        'COSH' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_MATH_AND_TRIG, 'functionCall' => 'cosh', 'argumentCount' => '1'),
        'COUNT' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_STATISTICAL, 'functionCall' => 'PHPExcel_Calculation_Statistical::COUNT', 'argumentCount' => '1+'),
        'COUNTA' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_STATISTICAL, 'functionCall' => 'PHPExcel_Calculation_Statistical::COUNTA', 'argumentCount' => '1+'),
        'COUNTBLANK' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_STATISTICAL, 'functionCall' => 'PHPExcel_Calculation_Statistical::COUNTBLANK', 'argumentCount' => '1'),
        'COUNTIF' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_STATISTICAL, 'functionCall' => 'PHPExcel_Calculation_Statistical::COUNTIF', 'argumentCount' => '2'),
        'COUNTIFS' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_STATISTICAL, 'functionCall' => 'PHPExcel_Calculation_Functions::DUMMY', 'argumentCount' => '2'),
        'COUPDAYBS' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_FINANCIAL, 'functionCall' => 'PHPExcel_Calculation_Financial::COUPDAYBS', 'argumentCount' => '3,4'),
        'COUPDAYS' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_FINANCIAL, 'functionCall' => 'PHPExcel_Calculation_Financial::COUPDAYS', 'argumentCount' => '3,4'),
        'COUPDAYSNC' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_FINANCIAL, 'functionCall' => 'PHPExcel_Calculation_Financial::COUPDAYSNC', 'argumentCount' => '3,4'),
        'COUPNCD' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_FINANCIAL, 'functionCall' => 'PHPExcel_Calculation_Financial::COUPNCD', 'argumentCount' => '3,4'),
        'COUPNUM' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_FINANCIAL, 'functionCall' => 'PHPExcel_Calculation_Financial::COUPNUM', 'argumentCount' => '3,4'),
        'COUPPCD' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_FINANCIAL, 'functionCall' => 'PHPExcel_Calculation_Financial::COUPPCD', 'argumentCount' => '3,4'),
        'COVAR' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_STATISTICAL, 'functionCall' => 'PHPExcel_Calculation_Statistical::COVAR', 'argumentCount' => '2'),
        'CRITBINOM' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_STATISTICAL, 'functionCall' => 'PHPExcel_Calculation_Statistical::CRITBINOM', 'argumentCount' => '3'),
        'CUBEKPIMEMBER' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_CUBE, 'functionCall' => 'PHPExcel_Calculation_Functions::DUMMY', 'argumentCount' => '?'),
        'CUBEMEMBER' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_CUBE, 'functionCall' => 'PHPExcel_Calculation_Functions::DUMMY', 'argumentCount' => '?'),
        'CUBEMEMBERPROPERTY' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_CUBE, 'functionCall' => 'PHPExcel_Calculation_Functions::DUMMY', 'argumentCount' => '?'),
        'CUBERANKEDMEMBER' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_CUBE, 'functionCall' => 'PHPExcel_Calculation_Functions::DUMMY', 'argumentCount' => '?'),
        'CUBESET' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_CUBE, 'functionCall' => 'PHPExcel_Calculation_Functions::DUMMY', 'argumentCount' => '?'),
        'CUBESETCOUNT' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_CUBE, 'functionCall' => 'PHPExcel_Calculation_Functions::DUMMY', 'argumentCount' => '?'),
        'CUBEVALUE' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_CUBE, 'functionCall' => 'PHPExcel_Calculation_Functions::DUMMY', 'argumentCount' => '?'),
        'CUMIPMT' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_FINANCIAL, 'functionCall' => 'PHPExcel_Calculation_Financial::CUMIPMT', 'argumentCount' => '6'),
        'CUMPRINC' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_FINANCIAL, 'functionCall' => 'PHPExcel_Calculation_Financial::CUMPRINC', 'argumentCount' => '6'),
        'DATE' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_DATE_AND_TIME, 'functionCall' => 'PHPExcel_Calculation_DateTime::DATE', 'argumentCount' => '3'),
        'DATEDIF' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_DATE_AND_TIME, 'functionCall' => 'PHPExcel_Calculation_DateTime::DATEDIF', 'argumentCount' => '2,3'),
        'DATEVALUE' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_DATE_AND_TIME, 'functionCall' => 'PHPExcel_Calculation_DateTime::DATEVALUE', 'argumentCount' => '1'),
        'DAVERAGE' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_DATABASE, 'functionCall' => 'PHPExcel_Calculation_Database::DAVERAGE', 'argumentCount' => '3'),
        'DAY' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_DATE_AND_TIME, 'functionCall' => 'PHPExcel_Calculation_DateTime::DAYOFMONTH', 'argumentCount' => '1'),
        'DAYS360' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_DATE_AND_TIME, 'functionCall' => 'PHPExcel_Calculation_DateTime::DAYS360', 'argumentCount' => '2,3'),
        'DB' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_FINANCIAL, 'functionCall' => 'PHPExcel_Calculation_Financial::DB', 'argumentCount' => '4,5'),
        'DCOUNT' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_DATABASE, 'functionCall' => 'PHPExcel_Calculation_Database::DCOUNT', 'argumentCount' => '3'),
        'DCOUNTA' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_DATABASE, 'functionCall' => 'PHPExcel_Calculation_Database::DCOUNTA', 'argumentCount' => '3'),
        'DDB' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_FINANCIAL, 'functionCall' => 'PHPExcel_Calculation_Financial::DDB', 'argumentCount' => '4,5'),
        'DEC2BIN' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_ENGINEERING, 'functionCall' => 'PHPExcel_Calculation_Engineering::DECTOBIN', 'argumentCount' => '1,2'),
        'DEC2HEX' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_ENGINEERING, 'functionCall' => 'PHPExcel_Calculation_Engineering::DECTOHEX', 'argumentCount' => '1,2'),
        'DEC2OCT' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_ENGINEERING, 'functionCall' => 'PHPExcel_Calculation_Engineering::DECTOOCT', 'argumentCount' => '1,2'),
        'DEGREES' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_MATH_AND_TRIG, 'functionCall' => 'rad2deg', 'argumentCount' => '1'),
        'DELTA' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_ENGINEERING, 'functionCall' => 'PHPExcel_Calculation_Engineering::DELTA', 'argumentCount' => '1,2'),
        'DEVSQ' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_STATISTICAL, 'functionCall' => 'PHPExcel_Calculation_Statistical::DEVSQ', 'argumentCount' => '1+'),
        'DGET' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_DATABASE, 'functionCall' => 'PHPExcel_Calculation_Database::DGET', 'argumentCount' => '3'),
        'DISC' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_FINANCIAL, 'functionCall' => 'PHPExcel_Calculation_Financial::DISC', 'argumentCount' => '4,5'),
        'DMAX' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_DATABASE, 'functionCall' => 'PHPExcel_Calculation_Database::DMAX', 'argumentCount' => '3'),
        'DMIN' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_DATABASE, 'functionCall' => 'PHPExcel_Calculation_Database::DMIN', 'argumentCount' => '3'),
        'DOLLAR' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_TEXT_AND_DATA, 'functionCall' => 'PHPExcel_Calculation_TextData::DOLLAR', 'argumentCount' => '1,2'),
        'DOLLARDE' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_FINANCIAL, 'functionCall' => 'PHPExcel_Calculation_Financial::DOLLARDE', 'argumentCount' => '2'),
        'DOLLARFR' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_FINANCIAL, 'functionCall' => 'PHPExcel_Calculation_Financial::DOLLARFR', 'argumentCount' => '2'),
        'DPRODUCT' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_DATABASE, 'functionCall' => 'PHPExcel_Calculation_Database::DPRODUCT', 'argumentCount' => '3'),
        'DSTDEV' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_DATABASE, 'functionCall' => 'PHPExcel_Calculation_Database::DSTDEV', 'argumentCount' => '3'),
        'DSTDEVP' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_DATABASE, 'functionCall' => 'PHPExcel_Calculation_Database::DSTDEVP', 'argumentCount' => '3'),
        'DSUM' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_DATABASE, 'functionCall' => 'PHPExcel_Calculation_Database::DSUM', 'argumentCount' => '3'),
        'DURATION' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_FINANCIAL, 'functionCall' => 'PHPExcel_Calculation_Functions::DUMMY', 'argumentCount' => '5,6'),
        'DVAR' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_DATABASE, 'functionCall' => 'PHPExcel_Calculation_Database::DVAR', 'argumentCount' => '3'),
        'DVARP' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_DATABASE, 'functionCall' => 'PHPExcel_Calculation_Database::DVARP', 'argumentCount' => '3'),
        'EDATE' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_DATE_AND_TIME, 'functionCall' => 'PHPExcel_Calculation_DateTime::EDATE', 'argumentCount' => '2'),
        'EFFECT' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_FINANCIAL, 'functionCall' => 'PHPExcel_Calculation_Financial::EFFECT', 'argumentCount' => '2'),
        'EOMONTH' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_DATE_AND_TIME, 'functionCall' => 'PHPExcel_Calculation_DateTime::EOMONTH', 'argumentCount' => '2'),
        'ERF' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_ENGINEERING, 'functionCall' => 'PHPExcel_Calculation_Engineering::ERF', 'argumentCount' => '1,2'),
        'ERFC' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_ENGINEERING, 'functionCall' => 'PHPExcel_Calculation_Engineering::ERFC', 'argumentCount' => '1'),
        'ERROR.TYPE' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_INFORMATION, 'functionCall' => 'PHPExcel_Calculation_Functions::ERROR_TYPE', 'argumentCount' => '1'),
        'EVEN' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_MATH_AND_TRIG, 'functionCall' => 'PHPExcel_Calculation_MathTrig::EVEN', 'argumentCount' => '1'),
        'EXACT' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_TEXT_AND_DATA, 'functionCall' => 'PHPExcel_Calculation_Functions::DUMMY', 'argumentCount' => '2'),
        'EXP' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_MATH_AND_TRIG, 'functionCall' => 'exp', 'argumentCount' => '1'),
        'EXPONDIST' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_STATISTICAL, 'functionCall' => 'PHPExcel_Calculation_Statistical::EXPONDIST', 'argumentCount' => '3'),
        'FACT' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_MATH_AND_TRIG, 'functionCall' => 'PHPExcel_Calculation_MathTrig::FACT', 'argumentCount' => '1'),
        'FACTDOUBLE' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_MATH_AND_TRIG, 'functionCall' => 'PHPExcel_Calculation_MathTrig::FACTDOUBLE', 'argumentCount' => '1'),
        'FALSE' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_LOGICAL, 'functionCall' => 'PHPExcel_Calculation_Logical::FALSE', 'argumentCount' => '0'),
        'FDIST' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_STATISTICAL, 'functionCall' => 'PHPExcel_Calculation_Functions::DUMMY', 'argumentCount' => '3'),
        'FIND' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_TEXT_AND_DATA, 'functionCall' => 'PHPExcel_Calculation_TextData::SEARCHSENSITIVE', 'argumentCount' => '2,3'),
        'FINDB' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_TEXT_AND_DATA, 'functionCall' => 'PHPExcel_Calculation_TextData::SEARCHSENSITIVE', 'argumentCount' => '2,3'),
        'FINV' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_STATISTICAL, 'functionCall' => 'PHPExcel_Calculation_Functions::DUMMY', 'argumentCount' => '3'),
        'FISHER' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_STATISTICAL, 'functionCall' => 'PHPExcel_Calculation_Statistical::FISHER', 'argumentCount' => '1'),
        'FISHERINV' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_STATISTICAL, 'functionCall' => 'PHPExcel_Calculation_Statistical::FISHERINV', 'argumentCount' => '1'),
        'FIXED' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_TEXT_AND_DATA, 'functionCall' => 'PHPExcel_Calculation_TextData::FIXEDFORMAT', 'argumentCount' => '1-3'),
        'FLOOR' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_MATH_AND_TRIG, 'functionCall' => 'PHPExcel_Calculation_MathTrig::FLOOR', 'argumentCount' => '2'),
        'FORECAST' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_STATISTICAL, 'functionCall' => 'PHPExcel_Calculation_Statistical::FORECAST', 'argumentCount' => '3'),
        'FREQUENCY' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_STATISTICAL, 'functionCall' => 'PHPExcel_Calculation_Functions::DUMMY', 'argumentCount' => '2'),
        'FTEST' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_STATISTICAL, 'functionCall' => 'PHPExcel_Calculation_Functions::DUMMY', 'argumentCount' => '2'),
        'FV' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_FINANCIAL, 'functionCall' => 'PHPExcel_Calculation_Financial::FV', 'argumentCount' => '3-5'),
        'FVSCHEDULE' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_FINANCIAL, 'functionCall' => 'PHPExcel_Calculation_Financial::FVSCHEDULE', 'argumentCount' => '2'),
        'GAMMADIST' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_STATISTICAL, 'functionCall' => 'PHPExcel_Calculation_Statistical::GAMMADIST', 'argumentCount' => '4'),
        'GAMMAINV' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_STATISTICAL, 'functionCall' => 'PHPExcel_Calculation_Statistical::GAMMAINV', 'argumentCount' => '3'),
        'GAMMALN' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_STATISTICAL, 'functionCall' => 'PHPExcel_Calculation_Statistical::GAMMALN', 'argumentCount' => '1'),
        'GCD' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_MATH_AND_TRIG, 'functionCall' => 'PHPExcel_Calculation_MathTrig::GCD', 'argumentCount' => '1+'),
        'GEOMEAN' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_STATISTICAL, 'functionCall' => 'PHPExcel_Calculation_Statistical::GEOMEAN', 'argumentCount' => '1+'),
        'GESTEP' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_ENGINEERING, 'functionCall' => 'PHPExcel_Calculation_Engineering::GESTEP', 'argumentCount' => '1,2'),
        'GETPIVOTDATA' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_LOOKUP_AND_REFERENCE, 'functionCall' => 'PHPExcel_Calculation_Functions::DUMMY', 'argumentCount' => '2+'),
        'GROWTH' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_STATISTICAL, 'functionCall' => 'PHPExcel_Calculation_Statistical::GROWTH', 'argumentCount' => '1-4'),
        'HARMEAN' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_STATISTICAL, 'functionCall' => 'PHPExcel_Calculation_Statistical::HARMEAN', 'argumentCount' => '1+'),
        'HEX2BIN' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_ENGINEERING, 'functionCall' => 'PHPExcel_Calculation_Engineering::HEXTOBIN', 'argumentCount' => '1,2'),
        'HEX2DEC' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_ENGINEERING, 'functionCall' => 'PHPExcel_Calculation_Engineering::HEXTODEC', 'argumentCount' => '1'),
        'HEX2OCT' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_ENGINEERING, 'functionCall' => 'PHPExcel_Calculation_Engineering::HEXTOOCT', 'argumentCount' => '1,2'),
        'HLOOKUP' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_LOOKUP_AND_REFERENCE, 'functionCall' => 'PHPExcel_Calculation_LookupRef::HLOOKUP', 'argumentCount' => '3,4'),
        'HOUR' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_DATE_AND_TIME, 'functionCall' => 'PHPExcel_Calculation_DateTime::HOUROFDAY', 'argumentCount' => '1'),
        'HYPERLINK' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_LOOKUP_AND_REFERENCE, 'functionCall' => 'PHPExcel_Calculation_LookupRef::HYPERLINK', 'argumentCount' => '1,2', 'passCellReference' => \TRUE),
        'HYPGEOMDIST' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_STATISTICAL, 'functionCall' => 'PHPExcel_Calculation_Statistical::HYPGEOMDIST', 'argumentCount' => '4'),
        'IF' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_LOGICAL, 'functionCall' => 'PHPExcel_Calculation_Logical::STATEMENT_IF', 'argumentCount' => '1-3'),
        'IFERROR' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_LOGICAL, 'functionCall' => 'PHPExcel_Calculation_Logical::IFERROR', 'argumentCount' => '2'),
        'IMABS' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_ENGINEERING, 'functionCall' => 'PHPExcel_Calculation_Engineering::IMABS', 'argumentCount' => '1'),
        'IMAGINARY' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_ENGINEERING, 'functionCall' => 'PHPExcel_Calculation_Engineering::IMAGINARY', 'argumentCount' => '1'),
        'IMARGUMENT' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_ENGINEERING, 'functionCall' => 'PHPExcel_Calculation_Engineering::IMARGUMENT', 'argumentCount' => '1'),
        'IMCONJUGATE' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_ENGINEERING, 'functionCall' => 'PHPExcel_Calculation_Engineering::IMCONJUGATE', 'argumentCount' => '1'),
        'IMCOS' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_ENGINEERING, 'functionCall' => 'PHPExcel_Calculation_Engineering::IMCOS', 'argumentCount' => '1'),
        'IMDIV' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_ENGINEERING, 'functionCall' => 'PHPExcel_Calculation_Engineering::IMDIV', 'argumentCount' => '2'),
        'IMEXP' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_ENGINEERING, 'functionCall' => 'PHPExcel_Calculation_Engineering::IMEXP', 'argumentCount' => '1'),
        'IMLN' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_ENGINEERING, 'functionCall' => 'PHPExcel_Calculation_Engineering::IMLN', 'argumentCount' => '1'),
        'IMLOG10' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_ENGINEERING, 'functionCall' => 'PHPExcel_Calculation_Engineering::IMLOG10', 'argumentCount' => '1'),
        'IMLOG2' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_ENGINEERING, 'functionCall' => 'PHPExcel_Calculation_Engineering::IMLOG2', 'argumentCount' => '1'),
        'IMPOWER' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_ENGINEERING, 'functionCall' => 'PHPExcel_Calculation_Engineering::IMPOWER', 'argumentCount' => '2'),
        'IMPRODUCT' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_ENGINEERING, 'functionCall' => 'PHPExcel_Calculation_Engineering::IMPRODUCT', 'argumentCount' => '1+'),
        'IMREAL' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_ENGINEERING, 'functionCall' => 'PHPExcel_Calculation_Engineering::IMREAL', 'argumentCount' => '1'),
        'IMSIN' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_ENGINEERING, 'functionCall' => 'PHPExcel_Calculation_Engineering::IMSIN', 'argumentCount' => '1'),
        'IMSQRT' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_ENGINEERING, 'functionCall' => 'PHPExcel_Calculation_Engineering::IMSQRT', 'argumentCount' => '1'),
        'IMSUB' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_ENGINEERING, 'functionCall' => 'PHPExcel_Calculation_Engineering::IMSUB', 'argumentCount' => '2'),
        'IMSUM' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_ENGINEERING, 'functionCall' => 'PHPExcel_Calculation_Engineering::IMSUM', 'argumentCount' => '1+'),
        'INDEX' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_LOOKUP_AND_REFERENCE, 'functionCall' => 'PHPExcel_Calculation_LookupRef::INDEX', 'argumentCount' => '1-4'),
        'INDIRECT' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_LOOKUP_AND_REFERENCE, 'functionCall' => 'PHPExcel_Calculation_LookupRef::INDIRECT', 'argumentCount' => '1,2', 'passCellReference' => \TRUE),
        'INFO' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_INFORMATION, 'functionCall' => 'PHPExcel_Calculation_Functions::DUMMY', 'argumentCount' => '1'),
        'INT' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_MATH_AND_TRIG, 'functionCall' => 'PHPExcel_Calculation_MathTrig::INT', 'argumentCount' => '1'),
        'INTERCEPT' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_STATISTICAL, 'functionCall' => 'PHPExcel_Calculation_Statistical::INTERCEPT', 'argumentCount' => '2'),
        'INTRATE' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_FINANCIAL, 'functionCall' => 'PHPExcel_Calculation_Financial::INTRATE', 'argumentCount' => '4,5'),
        'IPMT' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_FINANCIAL, 'functionCall' => 'PHPExcel_Calculation_Financial::IPMT', 'argumentCount' => '4-6'),
        'IRR' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_FINANCIAL, 'functionCall' => 'PHPExcel_Calculation_Financial::IRR', 'argumentCount' => '1,2'),
        'ISBLANK' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_INFORMATION, 'functionCall' => 'PHPExcel_Calculation_Functions::IS_BLANK', 'argumentCount' => '1'),
        'ISERR' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_INFORMATION, 'functionCall' => 'PHPExcel_Calculation_Functions::IS_ERR', 'argumentCount' => '1'),
        'ISERROR' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_INFORMATION, 'functionCall' => 'PHPExcel_Calculation_Functions::IS_ERROR', 'argumentCount' => '1'),
        'ISEVEN' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_INFORMATION, 'functionCall' => 'PHPExcel_Calculation_Functions::IS_EVEN', 'argumentCount' => '1'),
        'ISLOGICAL' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_INFORMATION, 'functionCall' => 'PHPExcel_Calculation_Functions::IS_LOGICAL', 'argumentCount' => '1'),
        'ISNA' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_INFORMATION, 'functionCall' => 'PHPExcel_Calculation_Functions::IS_NA', 'argumentCount' => '1'),
        'ISNONTEXT' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_INFORMATION, 'functionCall' => 'PHPExcel_Calculation_Functions::IS_NONTEXT', 'argumentCount' => '1'),
        'ISNUMBER' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_INFORMATION, 'functionCall' => 'PHPExcel_Calculation_Functions::IS_NUMBER', 'argumentCount' => '1'),
        'ISODD' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_INFORMATION, 'functionCall' => 'PHPExcel_Calculation_Functions::IS_ODD', 'argumentCount' => '1'),
        'ISPMT' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_FINANCIAL, 'functionCall' => 'PHPExcel_Calculation_Financial::ISPMT', 'argumentCount' => '4'),
        'ISREF' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_INFORMATION, 'functionCall' => 'PHPExcel_Calculation_Functions::DUMMY', 'argumentCount' => '1'),
        'ISTEXT' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_INFORMATION, 'functionCall' => 'PHPExcel_Calculation_Functions::IS_TEXT', 'argumentCount' => '1'),
        'JIS' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_TEXT_AND_DATA, 'functionCall' => 'PHPExcel_Calculation_Functions::DUMMY', 'argumentCount' => '1'),
        'KURT' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_STATISTICAL, 'functionCall' => 'PHPExcel_Calculation_Statistical::KURT', 'argumentCount' => '1+'),
        'LARGE' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_STATISTICAL, 'functionCall' => 'PHPExcel_Calculation_Statistical::LARGE', 'argumentCount' => '2'),
        'LCM' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_MATH_AND_TRIG, 'functionCall' => 'PHPExcel_Calculation_MathTrig::LCM', 'argumentCount' => '1+'),
        'LEFT' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_TEXT_AND_DATA, 'functionCall' => 'PHPExcel_Calculation_TextData::LEFT', 'argumentCount' => '1,2'),
        'LEFTB' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_TEXT_AND_DATA, 'functionCall' => 'PHPExcel_Calculation_TextData::LEFT', 'argumentCount' => '1,2'),
        'LEN' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_TEXT_AND_DATA, 'functionCall' => 'PHPExcel_Calculation_TextData::STRINGLENGTH', 'argumentCount' => '1'),
        'LENB' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_TEXT_AND_DATA, 'functionCall' => 'PHPExcel_Calculation_TextData::STRINGLENGTH', 'argumentCount' => '1'),
        'LINEST' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_STATISTICAL, 'functionCall' => 'PHPExcel_Calculation_Statistical::LINEST', 'argumentCount' => '1-4'),
        'LN' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_MATH_AND_TRIG, 'functionCall' => 'log', 'argumentCount' => '1'),
        'LOG' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_MATH_AND_TRIG, 'functionCall' => 'PHPExcel_Calculation_MathTrig::LOG_BASE', 'argumentCount' => '1,2'),
        'LOG10' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_MATH_AND_TRIG, 'functionCall' => 'log10', 'argumentCount' => '1'),
        'LOGEST' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_STATISTICAL, 'functionCall' => 'PHPExcel_Calculation_Statistical::LOGEST', 'argumentCount' => '1-4'),
        'LOGINV' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_STATISTICAL, 'functionCall' => 'PHPExcel_Calculation_Statistical::LOGINV', 'argumentCount' => '3'),
        'LOGNORMDIST' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_STATISTICAL, 'functionCall' => 'PHPExcel_Calculation_Statistical::LOGNORMDIST', 'argumentCount' => '3'),
        'LOOKUP' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_LOOKUP_AND_REFERENCE, 'functionCall' => 'PHPExcel_Calculation_LookupRef::LOOKUP', 'argumentCount' => '2,3'),
        'LOWER' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_TEXT_AND_DATA, 'functionCall' => 'PHPExcel_Calculation_TextData::LOWERCASE', 'argumentCount' => '1'),
        'MATCH' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_LOOKUP_AND_REFERENCE, 'functionCall' => 'PHPExcel_Calculation_LookupRef::MATCH', 'argumentCount' => '2,3'),
        'MAX' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_STATISTICAL, 'functionCall' => 'PHPExcel_Calculation_Statistical::MAX', 'argumentCount' => '1+'),
        'MAXA' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_STATISTICAL, 'functionCall' => 'PHPExcel_Calculation_Statistical::MAXA', 'argumentCount' => '1+'),
        'MAXIF' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_STATISTICAL, 'functionCall' => 'PHPExcel_Calculation_Statistical::MAXIF', 'argumentCount' => '2+'),
        'MDETERM' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_MATH_AND_TRIG, 'functionCall' => 'PHPExcel_Calculation_MathTrig::MDETERM', 'argumentCount' => '1'),
        'MDURATION' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_FINANCIAL, 'functionCall' => 'PHPExcel_Calculation_Functions::DUMMY', 'argumentCount' => '5,6'),
        'MEDIAN' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_STATISTICAL, 'functionCall' => 'PHPExcel_Calculation_Statistical::MEDIAN', 'argumentCount' => '1+'),
        'MEDIANIF' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_STATISTICAL, 'functionCall' => 'PHPExcel_Calculation_Functions::DUMMY', 'argumentCount' => '2+'),
        'MID' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_TEXT_AND_DATA, 'functionCall' => 'PHPExcel_Calculation_TextData::MID', 'argumentCount' => '3'),
        'MIDB' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_TEXT_AND_DATA, 'functionCall' => 'PHPExcel_Calculation_TextData::MID', 'argumentCount' => '3'),
        'MIN' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_STATISTICAL, 'functionCall' => 'PHPExcel_Calculation_Statistical::MIN', 'argumentCount' => '1+'),
        'MINA' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_STATISTICAL, 'functionCall' => 'PHPExcel_Calculation_Statistical::MINA', 'argumentCount' => '1+'),
        'MINIF' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_STATISTICAL, 'functionCall' => 'PHPExcel_Calculation_Statistical::MINIF', 'argumentCount' => '2+'),
        'MINUTE' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_DATE_AND_TIME, 'functionCall' => 'PHPExcel_Calculation_DateTime::MINUTEOFHOUR', 'argumentCount' => '1'),
        'MINVERSE' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_MATH_AND_TRIG, 'functionCall' => 'PHPExcel_Calculation_MathTrig::MINVERSE', 'argumentCount' => '1'),
        'MIRR' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_FINANCIAL, 'functionCall' => 'PHPExcel_Calculation_Financial::MIRR', 'argumentCount' => '3'),
        'MMULT' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_MATH_AND_TRIG, 'functionCall' => 'PHPExcel_Calculation_MathTrig::MMULT', 'argumentCount' => '2'),
        'MOD' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_MATH_AND_TRIG, 'functionCall' => 'PHPExcel_Calculation_MathTrig::MOD', 'argumentCount' => '2'),
        'MODE' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_STATISTICAL, 'functionCall' => 'PHPExcel_Calculation_Statistical::MODE', 'argumentCount' => '1+'),
        'MONTH' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_DATE_AND_TIME, 'functionCall' => 'PHPExcel_Calculation_DateTime::MONTHOFYEAR', 'argumentCount' => '1'),
        'MROUND' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_MATH_AND_TRIG, 'functionCall' => 'PHPExcel_Calculation_MathTrig::MROUND', 'argumentCount' => '2'),
        'MULTINOMIAL' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_MATH_AND_TRIG, 'functionCall' => 'PHPExcel_Calculation_MathTrig::MULTINOMIAL', 'argumentCount' => '1+'),
        'N' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_INFORMATION, 'functionCall' => 'PHPExcel_Calculation_Functions::N', 'argumentCount' => '1'),
        'NA' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_INFORMATION, 'functionCall' => 'PHPExcel_Calculation_Functions::NA', 'argumentCount' => '0'),
        'NEGBINOMDIST' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_STATISTICAL, 'functionCall' => 'PHPExcel_Calculation_Statistical::NEGBINOMDIST', 'argumentCount' => '3'),
        'NETWORKDAYS' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_DATE_AND_TIME, 'functionCall' => 'PHPExcel_Calculation_DateTime::NETWORKDAYS', 'argumentCount' => '2+'),
        'NOMINAL' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_FINANCIAL, 'functionCall' => 'PHPExcel_Calculation_Financial::NOMINAL', 'argumentCount' => '2'),
        'NORMDIST' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_STATISTICAL, 'functionCall' => 'PHPExcel_Calculation_Statistical::NORMDIST', 'argumentCount' => '4'),
        'NORMINV' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_STATISTICAL, 'functionCall' => 'PHPExcel_Calculation_Statistical::NORMINV', 'argumentCount' => '3'),
        'NORMSDIST' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_STATISTICAL, 'functionCall' => 'PHPExcel_Calculation_Statistical::NORMSDIST', 'argumentCount' => '1'),
        'NORMSINV' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_STATISTICAL, 'functionCall' => 'PHPExcel_Calculation_Statistical::NORMSINV', 'argumentCount' => '1'),
        'NOT' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_LOGICAL, 'functionCall' => 'PHPExcel_Calculation_Logical::NOT', 'argumentCount' => '1'),
        'NOW' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_DATE_AND_TIME, 'functionCall' => 'PHPExcel_Calculation_DateTime::DATETIMENOW', 'argumentCount' => '0'),
        'NPER' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_FINANCIAL, 'functionCall' => 'PHPExcel_Calculation_Financial::NPER', 'argumentCount' => '3-5'),
        'NPV' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_FINANCIAL, 'functionCall' => 'PHPExcel_Calculation_Financial::NPV', 'argumentCount' => '2+'),
        'OCT2BIN' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_ENGINEERING, 'functionCall' => 'PHPExcel_Calculation_Engineering::OCTTOBIN', 'argumentCount' => '1,2'),
        'OCT2DEC' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_ENGINEERING, 'functionCall' => 'PHPExcel_Calculation_Engineering::OCTTODEC', 'argumentCount' => '1'),
        'OCT2HEX' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_ENGINEERING, 'functionCall' => 'PHPExcel_Calculation_Engineering::OCTTOHEX', 'argumentCount' => '1,2'),
        'ODD' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_MATH_AND_TRIG, 'functionCall' => 'PHPExcel_Calculation_MathTrig::ODD', 'argumentCount' => '1'),
        'ODDFPRICE' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_FINANCIAL, 'functionCall' => 'PHPExcel_Calculation_Functions::DUMMY', 'argumentCount' => '8,9'),
        'ODDFYIELD' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_FINANCIAL, 'functionCall' => 'PHPExcel_Calculation_Functions::DUMMY', 'argumentCount' => '8,9'),
        'ODDLPRICE' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_FINANCIAL, 'functionCall' => 'PHPExcel_Calculation_Functions::DUMMY', 'argumentCount' => '7,8'),
        'ODDLYIELD' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_FINANCIAL, 'functionCall' => 'PHPExcel_Calculation_Functions::DUMMY', 'argumentCount' => '7,8'),
        'OFFSET' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_LOOKUP_AND_REFERENCE, 'functionCall' => 'PHPExcel_Calculation_LookupRef::OFFSET', 'argumentCount' => '3,5', 'passCellReference' => \TRUE, 'passByReference' => array(\TRUE)),
        'OR' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_LOGICAL, 'functionCall' => 'PHPExcel_Calculation_Logical::LOGICAL_OR', 'argumentCount' => '1+'),
        'PEARSON' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_STATISTICAL, 'functionCall' => 'PHPExcel_Calculation_Statistical::CORREL', 'argumentCount' => '2'),
        'PERCENTILE' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_STATISTICAL, 'functionCall' => 'PHPExcel_Calculation_Statistical::PERCENTILE', 'argumentCount' => '2'),
        'PERCENTRANK' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_STATISTICAL, 'functionCall' => 'PHPExcel_Calculation_Statistical::PERCENTRANK', 'argumentCount' => '2,3'),
        'PERMUT' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_STATISTICAL, 'functionCall' => 'PHPExcel_Calculation_Statistical::PERMUT', 'argumentCount' => '2'),
        'PHONETIC' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_TEXT_AND_DATA, 'functionCall' => 'PHPExcel_Calculation_Functions::DUMMY', 'argumentCount' => '1'),
        'PI' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_MATH_AND_TRIG, 'functionCall' => 'pi', 'argumentCount' => '0'),
        'PMT' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_FINANCIAL, 'functionCall' => 'PHPExcel_Calculation_Financial::PMT', 'argumentCount' => '3-5'),
        'POISSON' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_STATISTICAL, 'functionCall' => 'PHPExcel_Calculation_Statistical::POISSON', 'argumentCount' => '3'),
        'POWER' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_MATH_AND_TRIG, 'functionCall' => 'PHPExcel_Calculation_MathTrig::POWER', 'argumentCount' => '2'),
        'PPMT' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_FINANCIAL, 'functionCall' => 'PHPExcel_Calculation_Financial::PPMT', 'argumentCount' => '4-6'),
        'PRICE' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_FINANCIAL, 'functionCall' => 'PHPExcel_Calculation_Financial::PRICE', 'argumentCount' => '6,7'),
        'PRICEDISC' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_FINANCIAL, 'functionCall' => 'PHPExcel_Calculation_Financial::PRICEDISC', 'argumentCount' => '4,5'),
        'PRICEMAT' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_FINANCIAL, 'functionCall' => 'PHPExcel_Calculation_Financial::PRICEMAT', 'argumentCount' => '5,6'),
        'PROB' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_STATISTICAL, 'functionCall' => 'PHPExcel_Calculation_Functions::DUMMY', 'argumentCount' => '3,4'),
        'PRODUCT' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_MATH_AND_TRIG, 'functionCall' => 'PHPExcel_Calculation_MathTrig::PRODUCT', 'argumentCount' => '1+'),
        'PROPER' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_TEXT_AND_DATA, 'functionCall' => 'PHPExcel_Calculation_TextData::PROPERCASE', 'argumentCount' => '1'),
        'PV' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_FINANCIAL, 'functionCall' => 'PHPExcel_Calculation_Financial::PV', 'argumentCount' => '3-5'),
        'QUARTILE' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_STATISTICAL, 'functionCall' => 'PHPExcel_Calculation_Statistical::QUARTILE', 'argumentCount' => '2'),
        'QUOTIENT' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_MATH_AND_TRIG, 'functionCall' => 'PHPExcel_Calculation_MathTrig::QUOTIENT', 'argumentCount' => '2'),
        'RADIANS' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_MATH_AND_TRIG, 'functionCall' => 'deg2rad', 'argumentCount' => '1'),
        'RAND' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_MATH_AND_TRIG, 'functionCall' => 'PHPExcel_Calculation_MathTrig::RAND', 'argumentCount' => '0'),
        'RANDBETWEEN' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_MATH_AND_TRIG, 'functionCall' => 'PHPExcel_Calculation_MathTrig::RAND', 'argumentCount' => '2'),
        'RANK' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_STATISTICAL, 'functionCall' => 'PHPExcel_Calculation_Statistical::RANK', 'argumentCount' => '2,3'),
        'RATE' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_FINANCIAL, 'functionCall' => 'PHPExcel_Calculation_Financial::RATE', 'argumentCount' => '3-6'),
        'RECEIVED' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_FINANCIAL, 'functionCall' => 'PHPExcel_Calculation_Financial::RECEIVED', 'argumentCount' => '4-5'),
        'REPLACE' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_TEXT_AND_DATA, 'functionCall' => 'PHPExcel_Calculation_TextData::REPLACE', 'argumentCount' => '4'),
        'REPLACEB' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_TEXT_AND_DATA, 'functionCall' => 'PHPExcel_Calculation_TextData::REPLACE', 'argumentCount' => '4'),
        'REPT' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_TEXT_AND_DATA, 'functionCall' => 'str_repeat', 'argumentCount' => '2'),
        'RIGHT' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_TEXT_AND_DATA, 'functionCall' => 'PHPExcel_Calculation_TextData::RIGHT', 'argumentCount' => '1,2'),
        'RIGHTB' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_TEXT_AND_DATA, 'functionCall' => 'PHPExcel_Calculation_TextData::RIGHT', 'argumentCount' => '1,2'),
        'ROMAN' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_MATH_AND_TRIG, 'functionCall' => 'PHPExcel_Calculation_MathTrig::ROMAN', 'argumentCount' => '1,2'),
        'ROUND' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_MATH_AND_TRIG, 'functionCall' => 'round', 'argumentCount' => '2'),
        'ROUNDDOWN' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_MATH_AND_TRIG, 'functionCall' => 'PHPExcel_Calculation_MathTrig::ROUNDDOWN', 'argumentCount' => '2'),
        'ROUNDUP' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_MATH_AND_TRIG, 'functionCall' => 'PHPExcel_Calculation_MathTrig::ROUNDUP', 'argumentCount' => '2'),
        'ROW' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_LOOKUP_AND_REFERENCE, 'functionCall' => 'PHPExcel_Calculation_LookupRef::ROW', 'argumentCount' => '-1', 'passByReference' => array(\TRUE)),
        'ROWS' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_LOOKUP_AND_REFERENCE, 'functionCall' => 'PHPExcel_Calculation_LookupRef::ROWS', 'argumentCount' => '1'),
        'RSQ' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_STATISTICAL, 'functionCall' => 'PHPExcel_Calculation_Statistical::RSQ', 'argumentCount' => '2'),
        'RTD' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_LOOKUP_AND_REFERENCE, 'functionCall' => 'PHPExcel_Calculation_Functions::DUMMY', 'argumentCount' => '1+'),
        'SEARCH' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_TEXT_AND_DATA, 'functionCall' => 'PHPExcel_Calculation_TextData::SEARCHINSENSITIVE', 'argumentCount' => '2,3'),
        'SEARCHB' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_TEXT_AND_DATA, 'functionCall' => 'PHPExcel_Calculation_TextData::SEARCHINSENSITIVE', 'argumentCount' => '2,3'),
        'SECOND' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_DATE_AND_TIME, 'functionCall' => 'PHPExcel_Calculation_DateTime::SECONDOFMINUTE', 'argumentCount' => '1'),
        'SERIESSUM' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_MATH_AND_TRIG, 'functionCall' => 'PHPExcel_Calculation_MathTrig::SERIESSUM', 'argumentCount' => '4'),
        'SIGN' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_MATH_AND_TRIG, 'functionCall' => 'PHPExcel_Calculation_MathTrig::SIGN', 'argumentCount' => '1'),
        'SIN' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_MATH_AND_TRIG, 'functionCall' => 'sin', 'argumentCount' => '1'),
        'SINH' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_MATH_AND_TRIG, 'functionCall' => 'sinh', 'argumentCount' => '1'),
        'SKEW' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_STATISTICAL, 'functionCall' => 'PHPExcel_Calculation_Statistical::SKEW', 'argumentCount' => '1+'),
        'SLN' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_FINANCIAL, 'functionCall' => 'PHPExcel_Calculation_Financial::SLN', 'argumentCount' => '3'),
        'SLOPE' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_STATISTICAL, 'functionCall' => 'PHPExcel_Calculation_Statistical::SLOPE', 'argumentCount' => '2'),
        'SMALL' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_STATISTICAL, 'functionCall' => 'PHPExcel_Calculation_Statistical::SMALL', 'argumentCount' => '2'),
        'SQRT' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_MATH_AND_TRIG, 'functionCall' => 'sqrt', 'argumentCount' => '1'),
        'SQRTPI' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_MATH_AND_TRIG, 'functionCall' => 'PHPExcel_Calculation_MathTrig::SQRTPI', 'argumentCount' => '1'),
        'STANDARDIZE' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_STATISTICAL, 'functionCall' => 'PHPExcel_Calculation_Statistical::STANDARDIZE', 'argumentCount' => '3'),
        'STDEV' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_STATISTICAL, 'functionCall' => 'PHPExcel_Calculation_Statistical::STDEV', 'argumentCount' => '1+'),
        'STDEVA' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_STATISTICAL, 'functionCall' => 'PHPExcel_Calculation_Statistical::STDEVA', 'argumentCount' => '1+'),
        'STDEVP' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_STATISTICAL, 'functionCall' => 'PHPExcel_Calculation_Statistical::STDEVP', 'argumentCount' => '1+'),
        'STDEVPA' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_STATISTICAL, 'functionCall' => 'PHPExcel_Calculation_Statistical::STDEVPA', 'argumentCount' => '1+'),
        'STEYX' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_STATISTICAL, 'functionCall' => 'PHPExcel_Calculation_Statistical::STEYX', 'argumentCount' => '2'),
        'SUBSTITUTE' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_TEXT_AND_DATA, 'functionCall' => 'PHPExcel_Calculation_TextData::SUBSTITUTE', 'argumentCount' => '3,4'),
        'SUBTOTAL' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_MATH_AND_TRIG, 'functionCall' => 'PHPExcel_Calculation_MathTrig::SUBTOTAL', 'argumentCount' => '2+'),
        'SUM' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_MATH_AND_TRIG, 'functionCall' => 'PHPExcel_Calculation_MathTrig::SUM', 'argumentCount' => '1+'),
        'SUMIF' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_MATH_AND_TRIG, 'functionCall' => 'PHPExcel_Calculation_MathTrig::SUMIF', 'argumentCount' => '2,3'),
        'SUMIFS' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_MATH_AND_TRIG, 'functionCall' => 'PHPExcel_Calculation_Functions::DUMMY', 'argumentCount' => '?'),
        'SUMPRODUCT' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_MATH_AND_TRIG, 'functionCall' => 'PHPExcel_Calculation_MathTrig::SUMPRODUCT', 'argumentCount' => '1+'),
        'SUMSQ' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_MATH_AND_TRIG, 'functionCall' => 'PHPExcel_Calculation_MathTrig::SUMSQ', 'argumentCount' => '1+'),
        'SUMX2MY2' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_MATH_AND_TRIG, 'functionCall' => 'PHPExcel_Calculation_MathTrig::SUMX2MY2', 'argumentCount' => '2'),
        'SUMX2PY2' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_MATH_AND_TRIG, 'functionCall' => 'PHPExcel_Calculation_MathTrig::SUMX2PY2', 'argumentCount' => '2'),
        'SUMXMY2' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_MATH_AND_TRIG, 'functionCall' => 'PHPExcel_Calculation_MathTrig::SUMXMY2', 'argumentCount' => '2'),
        'SYD' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_FINANCIAL, 'functionCall' => 'PHPExcel_Calculation_Financial::SYD', 'argumentCount' => '4'),
        'T' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_TEXT_AND_DATA, 'functionCall' => 'PHPExcel_Calculation_TextData::RETURNSTRING', 'argumentCount' => '1'),
        'TAN' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_MATH_AND_TRIG, 'functionCall' => 'tan', 'argumentCount' => '1'),
        'TANH' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_MATH_AND_TRIG, 'functionCall' => 'tanh', 'argumentCount' => '1'),
        'TBILLEQ' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_FINANCIAL, 'functionCall' => 'PHPExcel_Calculation_Financial::TBILLEQ', 'argumentCount' => '3'),
        'TBILLPRICE' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_FINANCIAL, 'functionCall' => 'PHPExcel_Calculation_Financial::TBILLPRICE', 'argumentCount' => '3'),
        'TBILLYIELD' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_FINANCIAL, 'functionCall' => 'PHPExcel_Calculation_Financial::TBILLYIELD', 'argumentCount' => '3'),
        'TDIST' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_STATISTICAL, 'functionCall' => 'PHPExcel_Calculation_Statistical::TDIST', 'argumentCount' => '3'),
        'TEXT' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_TEXT_AND_DATA, 'functionCall' => 'PHPExcel_Calculation_TextData::TEXTFORMAT', 'argumentCount' => '2'),
        'TIME' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_DATE_AND_TIME, 'functionCall' => 'PHPExcel_Calculation_DateTime::TIME', 'argumentCount' => '3'),
        'TIMEVALUE' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_DATE_AND_TIME, 'functionCall' => 'PHPExcel_Calculation_DateTime::TIMEVALUE', 'argumentCount' => '1'),
        'TINV' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_STATISTICAL, 'functionCall' => 'PHPExcel_Calculation_Statistical::TINV', 'argumentCount' => '2'),
        'TODAY' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_DATE_AND_TIME, 'functionCall' => 'PHPExcel_Calculation_DateTime::DATENOW', 'argumentCount' => '0'),
        'TRANSPOSE' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_LOOKUP_AND_REFERENCE, 'functionCall' => 'PHPExcel_Calculation_LookupRef::TRANSPOSE', 'argumentCount' => '1'),
        'TREND' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_STATISTICAL, 'functionCall' => 'PHPExcel_Calculation_Statistical::TREND', 'argumentCount' => '1-4'),
        'TRIM' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_TEXT_AND_DATA, 'functionCall' => 'PHPExcel_Calculation_TextData::TRIMSPACES', 'argumentCount' => '1'),
        'TRIMMEAN' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_STATISTICAL, 'functionCall' => 'PHPExcel_Calculation_Statistical::TRIMMEAN', 'argumentCount' => '2'),
        'TRUE' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_LOGICAL, 'functionCall' => 'PHPExcel_Calculation_Logical::TRUE', 'argumentCount' => '0'),
        'TRUNC' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_MATH_AND_TRIG, 'functionCall' => 'PHPExcel_Calculation_MathTrig::TRUNC', 'argumentCount' => '1,2'),
        'TTEST' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_STATISTICAL, 'functionCall' => 'PHPExcel_Calculation_Functions::DUMMY', 'argumentCount' => '4'),
        'TYPE' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_INFORMATION, 'functionCall' => 'PHPExcel_Calculation_Functions::TYPE', 'argumentCount' => '1'),
        'UPPER' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_TEXT_AND_DATA, 'functionCall' => 'PHPExcel_Calculation_TextData::UPPERCASE', 'argumentCount' => '1'),
        'USDOLLAR' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_FINANCIAL, 'functionCall' => 'PHPExcel_Calculation_Functions::DUMMY', 'argumentCount' => '2'),
        'VALUE' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_TEXT_AND_DATA, 'functionCall' => 'PHPExcel_Calculation_TextData::VALUE', 'argumentCount' => '1'),
        'VAR' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_STATISTICAL, 'functionCall' => 'PHPExcel_Calculation_Statistical::VARFunc', 'argumentCount' => '1+'),
        'VARA' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_STATISTICAL, 'functionCall' => 'PHPExcel_Calculation_Statistical::VARA', 'argumentCount' => '1+'),
        'VARP' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_STATISTICAL, 'functionCall' => 'PHPExcel_Calculation_Statistical::VARP', 'argumentCount' => '1+'),
        'VARPA' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_STATISTICAL, 'functionCall' => 'PHPExcel_Calculation_Statistical::VARPA', 'argumentCount' => '1+'),
        'VDB' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_FINANCIAL, 'functionCall' => 'PHPExcel_Calculation_Functions::DUMMY', 'argumentCount' => '5-7'),
        'VERSION' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_INFORMATION, 'functionCall' => 'PHPExcel_Calculation_Functions::VERSION', 'argumentCount' => '0'),
        'VLOOKUP' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_LOOKUP_AND_REFERENCE, 'functionCall' => 'PHPExcel_Calculation_LookupRef::VLOOKUP', 'argumentCount' => '3,4'),
        'WEEKDAY' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_DATE_AND_TIME, 'functionCall' => 'PHPExcel_Calculation_DateTime::DAYOFWEEK', 'argumentCount' => '1,2'),
        'WEEKNUM' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_DATE_AND_TIME, 'functionCall' => 'PHPExcel_Calculation_DateTime::WEEKOFYEAR', 'argumentCount' => '1,2'),
        'WEIBULL' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_STATISTICAL, 'functionCall' => 'PHPExcel_Calculation_Statistical::WEIBULL', 'argumentCount' => '4'),
        'WORKDAY' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_DATE_AND_TIME, 'functionCall' => 'PHPExcel_Calculation_DateTime::WORKDAY', 'argumentCount' => '2+'),
        'XIRR' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_FINANCIAL, 'functionCall' => 'PHPExcel_Calculation_Financial::XIRR', 'argumentCount' => '2,3'),
        'XNPV' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_FINANCIAL, 'functionCall' => 'PHPExcel_Calculation_Financial::XNPV', 'argumentCount' => '3'),
        'YEAR' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_DATE_AND_TIME, 'functionCall' => 'PHPExcel_Calculation_DateTime::YEAR', 'argumentCount' => '1'),
        'YEARFRAC' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_DATE_AND_TIME, 'functionCall' => 'PHPExcel_Calculation_DateTime::YEARFRAC', 'argumentCount' => '2,3'),
        'YIELD' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_FINANCIAL, 'functionCall' => 'PHPExcel_Calculation_Functions::DUMMY', 'argumentCount' => '6,7'),
        'YIELDDISC' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_FINANCIAL, 'functionCall' => 'PHPExcel_Calculation_Financial::YIELDDISC', 'argumentCount' => '4,5'),
        'YIELDMAT' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_FINANCIAL, 'functionCall' => 'PHPExcel_Calculation_Financial::YIELDMAT', 'argumentCount' => '5,6'),
        'ZTEST' => array('category' => \PHPExcel_Calculation_Function::CATEGORY_STATISTICAL, 'functionCall' => 'PHPExcel_Calculation_Statistical::ZTEST', 'argumentCount' => '2-3'),
    );
    //	Internal functions used for special control purposes
    private static $_controlFunctions = array('MKMATRIX' => array('argumentCount' => '*', 'functionCall' => 'self::_mkMatrix'));
    private function __construct(\PHPExcel $workbook = \NULL)
    {
    }
    //	function __construct()
    public function __destruct()
    {
    }
    private static function _loadLocales()
    {
    }
    /**
     * Get an instance of this class
     *
     * @access	public
     * @param   PHPExcel $workbook  Injected workbook for working with a PHPExcel object,
     *									or NULL to create a standalone claculation engine
     * @return PHPExcel_Calculation
     */
    public static function getInstance(\PHPExcel $workbook = \NULL)
    {
    }
    //	function getInstance()
    /**
     * Unset an instance of this class
     *
     * @access	public
     * @param   PHPExcel $workbook  Injected workbook identifying the instance to unset
     */
    public static function unsetInstance(\PHPExcel $workbook = \NULL)
    {
    }
    /**
     * Flush the calculation cache for any existing instance of this class
     *		but only if a PHPExcel_Calculation instance exists
     *
     * @access	public
     * @return null
     */
    public function flushInstance()
    {
    }
    //	function flushInstance()
    /**
     * Get the debuglog for this claculation engine instance
     *
     * @access	public
     * @return PHPExcel_CalcEngine_Logger
     */
    public function getDebugLog()
    {
    }
    /**
     * __clone implementation. Cloning should not be allowed in a Singleton!
     *
     * @access	public
     * @throws	PHPExcel_Calculation_Exception
     */
    public final function __clone()
    {
    }
    //	function __clone()
    /**
     * Return the locale-specific translation of TRUE
     *
     * @access	public
     * @return	 string		locale-specific translation of TRUE
     */
    public static function getTRUE()
    {
    }
    /**
     * Return the locale-specific translation of FALSE
     *
     * @access	public
     * @return	 string		locale-specific translation of FALSE
     */
    public static function getFALSE()
    {
    }
    /**
     * Set the Array Return Type (Array or Value of first element in the array)
     *
     * @access	public
     * @param	 string	$returnType			Array return type
     * @return	 boolean					Success or failure
     */
    public static function setArrayReturnType($returnType)
    {
    }
    //	function setArrayReturnType()
    /**
     * Return the Array Return Type (Array or Value of first element in the array)
     *
     * @access	public
     * @return	 string		$returnType			Array return type
     */
    public static function getArrayReturnType()
    {
    }
    //	function getArrayReturnType()
    /**
     * Is calculation caching enabled?
     *
     * @access	public
     * @return boolean
     */
    public function getCalculationCacheEnabled()
    {
    }
    //	function getCalculationCacheEnabled()
    /**
     * Enable/disable calculation cache
     *
     * @access	public
     * @param boolean $pValue
     */
    public function setCalculationCacheEnabled($pValue = \TRUE)
    {
    }
    //	function setCalculationCacheEnabled()
    /**
     * Enable calculation cache
     */
    public function enableCalculationCache()
    {
    }
    //	function enableCalculationCache()
    /**
     * Disable calculation cache
     */
    public function disableCalculationCache()
    {
    }
    //	function disableCalculationCache()
    /**
     * Clear calculation cache
     */
    public function clearCalculationCache()
    {
    }
    //	function clearCalculationCache()
    /**
     * Clear calculation cache for a specified worksheet
     *
     * @param string $worksheetName
     */
    public function clearCalculationCacheForWorksheet($worksheetName)
    {
    }
    //	function clearCalculationCacheForWorksheet()
    /**
     * Rename calculation cache for a specified worksheet
     *
     * @param string $fromWorksheetName
     * @param string $toWorksheetName
     */
    public function renameCalculationCacheForWorksheet($fromWorksheetName, $toWorksheetName)
    {
    }
    //	function renameCalculationCacheForWorksheet()
    /**
     * Get the currently defined locale code
     *
     * @return string
     */
    public function getLocale()
    {
    }
    //	function getLocale()
    /**
     * Set the locale code
     *
     * @param string $locale  The locale to use for formula translation
     * @return boolean
     */
    public function setLocale($locale = 'en_us')
    {
    }
    //	function setLocale()
    public static function _translateSeparator($fromSeparator, $toSeparator, $formula, &$inBraces)
    {
    }
    private static function _translateFormula($from, $to, $formula, $fromSeparator, $toSeparator)
    {
    }
    private static $functionReplaceFromExcel = \NULL;
    private static $functionReplaceToLocale = \NULL;
    public function _translateFormulaToLocale($formula)
    {
    }
    //	function _translateFormulaToLocale()
    private static $functionReplaceFromLocale = \NULL;
    private static $functionReplaceToExcel = \NULL;
    public function _translateFormulaToEnglish($formula)
    {
    }
    //	function _translateFormulaToEnglish()
    public static function _localeFunc($function)
    {
    }
    /**
     * Wrap string values in quotes
     *
     * @param mixed $value
     * @return mixed
     */
    public static function _wrapResult($value)
    {
    }
    //	function _wrapResult()
    /**
     * Remove quotes used as a wrapper to identify string values
     *
     * @param mixed $value
     * @return mixed
     */
    public static function _unwrapResult($value)
    {
    }
    //	function _unwrapResult()
    /**
     * Calculate cell value (using formula from a cell ID)
     * Retained for backward compatibility
     *
     * @access	public
     * @param	PHPExcel_Cell	$pCell	Cell to calculate
     * @return	mixed
     * @throws	PHPExcel_Calculation_Exception
     */
    public function calculate(\PHPExcel_Cell $pCell = \NULL)
    {
    }
    //	function calculate()
    /**
     * Calculate the value of a cell formula
     *
     * @access	public
     * @param	PHPExcel_Cell	$pCell		Cell to calculate
     * @param	Boolean			$resetLog	Flag indicating whether the debug log should be reset or not
     * @return	mixed
     * @throws	PHPExcel_Calculation_Exception
     */
    public function calculateCellValue(\PHPExcel_Cell $pCell = \NULL, $resetLog = \TRUE)
    {
    }
    //	function calculateCellValue(
    /**
     * Validate and parse a formula string
     *
     * @param	string		$formula		Formula to parse
     * @return	array
     * @throws	PHPExcel_Calculation_Exception
     */
    public function parseFormula($formula)
    {
    }
    //	function parseFormula()
    /**
     * Calculate the value of a formula
     *
     * @param	string			$formula	Formula to parse
     * @param	string			$cellID		Address of the cell to calculate
     * @param	PHPExcel_Cell	$pCell		Cell to calculate
     * @return	mixed
     * @throws	PHPExcel_Calculation_Exception
     */
    public function calculateFormula($formula, $cellID = \NULL, \PHPExcel_Cell $pCell = \NULL)
    {
    }
    //	function calculateFormula()
    public function getValueFromCache($cellReference, &$cellValue)
    {
    }
    public function saveValueToCache($cellReference, $cellValue)
    {
    }
    /**
     * Parse a cell formula and calculate its value
     *
     * @param	string			$formula	The formula to parse and calculate
     * @param	string			$cellID		The ID (e.g. A3) of the cell that we are calculating
     * @param	PHPExcel_Cell	$pCell		Cell to calculate
     * @return	mixed
     * @throws	PHPExcel_Calculation_Exception
     */
    public function _calculateFormulaValue($formula, $cellID = \null, \PHPExcel_Cell $pCell = \null)
    {
    }
    //	function _calculateFormulaValue()
    /**
     * Ensure that paired matrix operands are both matrices and of the same size
     *
     * @param	mixed		&$operand1	First matrix operand
     * @param	mixed		&$operand2	Second matrix operand
     * @param	integer		$resize		Flag indicating whether the matrices should be resized to match
     *										and (if so), whether the smaller dimension should grow or the
     *										larger should shrink.
     *											0 = no resize
     *											1 = shrink to fit
     *											2 = extend to fit
     */
    private static function _checkMatrixOperands(&$operand1, &$operand2, $resize = 1)
    {
    }
    //	function _checkMatrixOperands()
    /**
     * Read the dimensions of a matrix, and re-index it with straight numeric keys starting from row 0, column 0
     *
     * @param	mixed		&$matrix		matrix operand
     * @return	array		An array comprising the number of rows, and number of columns
     */
    public static function _getMatrixDimensions(&$matrix)
    {
    }
    //	function _getMatrixDimensions()
    /**
     * Ensure that paired matrix operands are both matrices of the same size
     *
     * @param	mixed		&$matrix1		First matrix operand
     * @param	mixed		&$matrix2		Second matrix operand
     * @param	integer		$matrix1Rows	Row size of first matrix operand
     * @param	integer		$matrix1Columns	Column size of first matrix operand
     * @param	integer		$matrix2Rows	Row size of second matrix operand
     * @param	integer		$matrix2Columns	Column size of second matrix operand
     */
    private static function _resizeMatricesShrink(&$matrix1, &$matrix2, $matrix1Rows, $matrix1Columns, $matrix2Rows, $matrix2Columns)
    {
    }
    //	function _resizeMatricesShrink()
    /**
     * Ensure that paired matrix operands are both matrices of the same size
     *
     * @param	mixed		&$matrix1	First matrix operand
     * @param	mixed		&$matrix2	Second matrix operand
     * @param	integer		$matrix1Rows	Row size of first matrix operand
     * @param	integer		$matrix1Columns	Column size of first matrix operand
     * @param	integer		$matrix2Rows	Row size of second matrix operand
     * @param	integer		$matrix2Columns	Column size of second matrix operand
     */
    private static function _resizeMatricesExtend(&$matrix1, &$matrix2, $matrix1Rows, $matrix1Columns, $matrix2Rows, $matrix2Columns)
    {
    }
    //	function _resizeMatricesExtend()
    /**
     * Format details of an operand for display in the log (based on operand type)
     *
     * @param	mixed		$value	First matrix operand
     * @return	mixed
     */
    private function _showValue($value)
    {
    }
    //	function _showValue()
    /**
     * Format type and details of an operand for display in the log (based on operand type)
     *
     * @param	mixed		$value	First matrix operand
     * @return	mixed
     */
    private function _showTypeDetails($value)
    {
    }
    //	function _showTypeDetails()
    private function _convertMatrixReferences($formula)
    {
    }
    //	function _convertMatrixReferences()
    private static function _mkMatrix()
    {
    }
    //	function _mkMatrix()
    //	Binary Operators
    //	These operators always work on two values
    //	Array key is the operator, the value indicates whether this is a left or right associative operator
    private static $_operatorAssociativity = array(
        '^' => 0,
        //	Exponentiation
        '*' => 0,
        '/' => 0,
        //	Multiplication and Division
        '+' => 0,
        '-' => 0,
        //	Addition and Subtraction
        '&' => 0,
        //	Concatenation
        '|' => 0,
        ':' => 0,
        //	Intersect and Range
        '>' => 0,
        '<' => 0,
        '=' => 0,
        '>=' => 0,
        '<=' => 0,
        '<>' => 0,
    );
    //	Comparison (Boolean) Operators
    //	These operators work on two values, but always return a boolean result
    private static $_comparisonOperators = array('>' => \TRUE, '<' => \TRUE, '=' => \TRUE, '>=' => \TRUE, '<=' => \TRUE, '<>' => \TRUE);
    //	Operator Precedence
    //	This list includes all valid operators, whether binary (including boolean) or unary (such as %)
    //	Array key is the operator, the value is its precedence
    private static $_operatorPrecedence = array(
        ':' => 8,
        //	Range
        '|' => 7,
        //	Intersect
        '~' => 6,
        //	Negation
        '%' => 5,
        //	Percentage
        '^' => 4,
        //	Exponentiation
        '*' => 3,
        '/' => 3,
        //	Multiplication and Division
        '+' => 2,
        '-' => 2,
        //	Addition and Subtraction
        '&' => 1,
        //	Concatenation
        '>' => 0,
        '<' => 0,
        '=' => 0,
        '>=' => 0,
        '<=' => 0,
        '<>' => 0,
    );
    // Convert infix to postfix notation
    private function _parseFormula($formula, \PHPExcel_Cell $pCell = \NULL)
    {
    }
    //	function _parseFormula()
    private static function _dataTestReference(&$operandData)
    {
    }
    // evaluate postfix notation
    private function _processTokenStack($tokens, $cellID = \NULL, \PHPExcel_Cell $pCell = \NULL)
    {
    }
    //	function _processTokenStack()
    private function _validateBinaryOperand($cellID, &$operand, &$stack)
    {
    }
    //	function _validateBinaryOperand()
    private function _executeBinaryComparisonOperation($cellID, $operand1, $operand2, $operation, &$stack, $recursingArrays = \FALSE)
    {
    }
    /**
     * Compare two strings in the same way as strcmp() except that lowercase come before uppercase letters
     * @param    string    $str1    First string value for the comparison
     * @param    string    $str2    Second string value for the comparison
     * @return   integer
     */
    private function strcmpLowercaseFirst($str1, $str2)
    {
    }
    private function _executeNumericBinaryOperation($cellID, $operand1, $operand2, $operation, $matrixFunction, &$stack)
    {
    }
    //	function _executeNumericBinaryOperation()
    // trigger an error, but nicely, if need be
    protected function _raiseFormulaError($errorMessage)
    {
    }
    //	function _raiseFormulaError()
    /**
     * Extract range values
     *
     * @param	string				&$pRange	String based range representation
     * @param	PHPExcel_Worksheet	$pSheet		Worksheet
     * @param	boolean				$resetLog	Flag indicating whether calculation log should be reset or not
     * @return  mixed				Array of values in range if range contains more than one element. Otherwise, a single value is returned.
     * @throws	PHPExcel_Calculation_Exception
     */
    public function extractCellRange(&$pRange = 'A1', \PHPExcel_Worksheet $pSheet = \NULL, $resetLog = \TRUE)
    {
    }
    //	function extractCellRange()
    /**
     * Extract range values
     *
     * @param	string				&$pRange	String based range representation
     * @param	PHPExcel_Worksheet	$pSheet		Worksheet
     * @return  mixed				Array of values in range if range contains more than one element. Otherwise, a single value is returned.
     * @param	boolean				$resetLog	Flag indicating whether calculation log should be reset or not
     * @throws	PHPExcel_Calculation_Exception
     */
    public function extractNamedRange(&$pRange = 'A1', \PHPExcel_Worksheet $pSheet = \NULL, $resetLog = \TRUE)
    {
    }
    //	function extractNamedRange()
    /**
     * Is a specific function implemented?
     *
     * @param	string	$pFunction	Function Name
     * @return	boolean
     */
    public function isImplemented($pFunction = '')
    {
    }
    //	function isImplemented()
    /**
     * Get a list of all implemented functions as an array of function objects
     *
     * @return	array of PHPExcel_Calculation_Function
     */
    public function listFunctions()
    {
    }
    //	function listFunctions()
    /**
     * Get a list of all Excel function names
     *
     * @return	array
     */
    public function listAllFunctionNames()
    {
    }
    //	function listAllFunctionNames()
    /**
     * Get a list of implemented Excel function names
     *
     * @return	array
     */
    public function listFunctionNames()
    {
    }
    //	function listFunctionNames()
}
/**
 * @ignore
 */
\define('PHPEXCEL_ROOT', \dirname(__FILE__) . '/../');