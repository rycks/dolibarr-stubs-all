<?php

/**
 *  Parent class for password rules/management modules
 */
abstract class ModeleGenPassword
{
    public $picto = 'generic';
    /**
     * Flag to 1 if we must clean ambiguous charaters for the autogeneration of password (List of ambiguous char is in $this->Ambi)
     *
     * @var integer
     */
    public $WithoutAmbi = 0;
    /**
     * @var string Error code (or message)
     */
    public $error = '';
    /**
     * @var DoliDB Database handler.
     */
    public $db;
    /**
     * @var Conf dolibarr conf
     */
    public $conf;
    /**
     * @var Translate Translate Object
     */
    public $langs;
    /**
     * @var User user
     */
    public $user;
    /**
     * 		Return if a module can be used or not
     *
     *      @return		boolean     true if module can be used
     */
    public function isEnabled()
    {
    }
    /**
     *		Return description of module
     *
     *      @return     string      Description of text
     */
    public function getDescription()
    {
    }
    /**
     *  Return an example of password generated by this module
     *
     *  @return     string      Example of password
     */
    public function getExample()
    {
    }
    /**
     *  Build new password
     *
     *  @return     string      Return a new generated password
     */
    public function getNewGeneratedPassword()
    {
    }
    /**
     * 	Validate a password.
     * 	This function is called by User->setPassword() and internally to validate that the password matches the constraints.
     *
     *	@param		string	$password	Password to check
     *  @return     int					0 if KO, >0 if OK
     */
    public function validatePassword($password)
    {
    }
}